THERE_BE_DRAGONS_HERE
Error: This message is not appropriate for this object
25 January 2011 10:43:55 am

VM: Mac OS - intel - 1066 - PharoCore1.1ALPHA of '19 October 2009' [Latest update: #11239] Squeak VM 4.2.2b1
Image: PharoCore1.1ALPHA [Latest update: #11239]

SecurityManager state:
Restricted: false
FileAccess: true
SocketAccess: true
Working Dir /Users/arnaudj/Desktop/GIT/Handle/VM
Trusted Dir /foobar/tooBar/forSqueak/bogus
Untrusted Dir /Users/arnaudj/Library/Preferences/Squeak/Internet/My Squeak

ByteSymbol class(Object)>>error:
	Receiver: ByteSymbol
	Arguments and temporary variables: 
		aString: 	'This message is not appropriate for this object'
	Receiver's instance variables: 
		superclass: 	Symbol
		methodDict: 	a MethodDictionary(#asByteArray->(ByteSymbol>>#asByteArray "a Compi...etc...
		format: 	1026
		instanceVariables: 	nil
		organization: 	('accessing' at: byteAt: byteAt:put: byteSize indexOfAnyOf:starti...etc...
		subclasses: 	nil
		name: 	#ByteSymbol
		classPool: 	nil
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'Collections-Strings'
		traitComposition: 	nil
		localSelectors: 	nil


ByteSymbol class(Object)>>shouldNotImplement
	Receiver: ByteSymbol
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Symbol
		methodDict: 	a MethodDictionary(#asByteArray->(ByteSymbol>>#asByteArray "a Compi...etc...
		format: 	1026
		instanceVariables: 	nil
		organization: 	('accessing' at: byteAt: byteAt:put: byteSize indexOfAnyOf:starti...etc...
		subclasses: 	nil
		name: 	#ByteSymbol
		classPool: 	nil
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'Collections-Strings'
		traitComposition: 	nil
		localSelectors: 	nil


ByteSymbol class(Symbol class)>>new:
	Receiver: ByteSymbol
	Arguments and temporary variables: 
		aSize: 	5
	Receiver's instance variables: 
		superclass: 	Symbol
		methodDict: 	a MethodDictionary(#asByteArray->(ByteSymbol>>#asByteArray "a Compi...etc...
		format: 	1026
		instanceVariables: 	nil
		organization: 	('accessing' at: byteAt: byteAt:put: byteSize indexOfAnyOf:starti...etc...
		subclasses: 	nil
		name: 	#ByteSymbol
		classPool: 	nil
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'Collections-Strings'
		traitComposition: 	nil
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

Compiler>>evaluate:in:to:notifying:ifFail:logged:
	Receiver: a Compiler
	Arguments and temporary variables: 
		textOrStream: 	a ReadWriteStream '(ByteSymbol new:5) size'
		aContext: 	nil
		receiver: 	nil
		aRequestor: 	a TextMorphEditor
		failBlock: 	[closure] in [] in TextMorphEditor(ParagraphEditor)>>evaluateSelecti...etc...
		logFlag: 	true
		methodNode: 	DoIt
	^ (ByteSymbol new: 5) size
		method: 	(UndefinedObject>>#DoIt "a CompiledMethod(2178)")
		value: 	nil
		toLog: 	nil
		itsSelection: 	nil
		itsSelectionString: 	nil
	Receiver's instance variables: 
		sourceStream: 	a ReadWriteStream '(ByteSymbol new:5) size'
		requestor: 	a TextMorphEditor
		class: 	UndefinedObject
		category: 	nil
		context: 	nil
		parser: 	a Parser


[] in TextMorphEditor(ParagraphEditor)>>evaluateSelection
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 24 and rectangle 149@0 corner: 149@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(23 to: 23)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	nil
		pivotBlock: 	nil


BlockClosure>>on:do:
	Receiver: [closure] in TextMorphEditor(ParagraphEditor)>>evaluateSelection
	Arguments and temporary variables: 
		exception: 	OutOfScopeNotification
		handlerAction: 	[closure] in TextMorphEditor(ParagraphEditor)>>evaluateSelection...etc...
		handlerActive: 	true
	Receiver's instance variables: 
		outerContext: 	TextMorphEditor(ParagraphEditor)>>evaluateSelection
		startpc: 	116
		numArgs: 	0


TextMorphEditor(ParagraphEditor)>>evaluateSelection
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 24 and rectangle 149@0 corner: 149@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(23 to: 23)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	nil
		pivotBlock: 	nil


TextMorphEditor(ParagraphEditor)>>printIt
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		result: 	nil
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 24 and rectangle 149@0 corner: 149@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(23 to: 23)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	nil
		pivotBlock: 	nil


[] in TextMorphEditor(ParagraphEditor)>>printIt:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 24 and rectangle 149@0 corner: 149@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(23 to: 23)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	nil
		pivotBlock: 	nil


TextMorphEditor(ParagraphEditor)>>terminateAndInitializeAround:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		aBlock: 	[closure] in TextMorphEditor(ParagraphEditor)>>printIt:
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 24 and rectangle 149@0 corner: 149@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(23 to: 23)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	nil
		pivotBlock: 	nil


TextMorphEditor(ParagraphEditor)>>printIt:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		characterStream: 	a WriteStream ''
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 24 and rectangle 149@0 corner: 149@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(23 to: 23)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	nil
		pivotBlock: 	nil


TextMorphEditor(ParagraphEditor)>>dispatchOnKeyEvent:with:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
		typeAheadStream: 	a WriteStream ''
		honorCommandKeys: 	true
		keyValue: 	112
		keyChar: 	$p
		char: 	$p
		action: 	#printIt:
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 24 and rectangle 149@0 corner: 149@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(23 to: 23)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	nil
		pivotBlock: 	nil


TextMorphEditor>>dispatchOnKeyEvent:with:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
		typeAheadStream: 	a WriteStream ''
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 24 and rectangle 149@0 corner: 149@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(23 to: 23)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	nil
		pivotBlock: 	nil


TextMorphEditor(ParagraphEditor)>>keystroke:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
		typeAhead: 	a WriteStream ''
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 24 and rectangle 149@0 corner: 149@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(23 to: 23)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	nil
		pivotBlock: 	nil


TextMorphEditor>>keystroke:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 24 and rectangle 149@0 corner: 149@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(23 to: 23)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	nil
		pivotBlock: 	nil


[] in [] in TextMorphForEditView(TextMorph)>>keyStroke:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63760962)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(ByteSymbol new:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


TextMorphForEditView(TextMorph)>>handleInteraction:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		interactionBlock: 	[closure] in [] in TextMorphForEditView(TextMorph)>>keyStroke...etc...
		oldEditor: 	a TextMorphEditor
		oldParagraph: 	a MultiNewParagraph
		oldText: 	a Text for '(ByteSymbol new:5) size'
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63760962)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(ByteSymbol new:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


TextMorphForEditView>>handleInteraction:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		interActionBlock: 	[closure] in [] in TextMorphForEditView(TextMorph)>>keyStroke...etc...
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63760962)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(ByteSymbol new:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


[] in TextMorphForEditView(TextMorph)>>keyStroke:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
		action: 	nil
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63760962)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(ByteSymbol new:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


StandardToolSet class>>codeCompletionAround:textMorph:keyStroke:
	Receiver: StandardToolSet
	Arguments and temporary variables: 
		aBlock: 	[closure] in TextMorphForEditView(TextMorph)>>keyStroke:
		aTextMorph: 	a TextMorphForEditView(2378)
		evt: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	2
		instanceVariables: 	nil
		organization: 	('as yet unclassified')

		subclasses: 	nil
		name: 	#StandardToolSet
		classPool: 	nil
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'Tools-Base'
		traitComposition: 	nil
		localSelectors: 	nil


ToolSet class>>codeCompletionAround:textMorph:keyStroke:
	Receiver: ToolSet
	Arguments and temporary variables: 
		aBlock: 	[closure] in TextMorphForEditView(TextMorph)>>keyStroke:
		aTextMorph: 	a TextMorphForEditView(2378)
		evt: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		superclass: 	AppRegistry
		methodDict: 	a MethodDictionary()
		format: 	2
		instanceVariables: 	nil
		organization: 	('as yet unclassified')

		subclasses: 	nil
		name: 	#ToolSet
		classPool: 	nil
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'System-Applications'
		traitComposition: 	nil
		localSelectors: 	nil
		registeredClasses: 	an OrderedCollection(StandardToolSet)
		default: 	StandardToolSet


TextMorphForEditView(TextMorph)>>keyStroke:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63760962)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(ByteSymbol new:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


TextMorphForEditView>>keyStroke:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
		view: 	a PluggableTextMorph(3542)
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63760962)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(ByteSymbol new:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


TextMorphForEditView(TextMorph)>>handleKeystroke:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		pasteUp: 	nil
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63760962)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(ByteSymbol new:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


KeyboardEvent>>sentTo:
	Receiver: [keystroke '<Cmd-p>']
	Arguments and temporary variables: 
		anObject: 	a TextMorphForEditView(2378)
	Receiver's instance variables: 
		timeStamp: 	63760450
		source: 	a HandMorph(3216)
		windowIndex: 	nil
		type: 	#keystroke
		buttons: 	64
		position: 	-801@594
		handler: 	nil
		wasHandled: 	true
		keyValue: 	112
		charCode: 	112
		scanCode: 	35


TextMorphForEditView(Morph)>>handleEvent:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63760962)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(ByteSymbol new:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


TextMorphForEditView(Morph)>>handleFocusEvent:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63760962)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(ByteSymbol new:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


[] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		focusHolder: 	a TextMorphForEditView(2378)
		result: 	#(nil)
	Receiver's instance variables: 
		bounds: 	372@763 corner: 388@779
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	372@763 corner: 388@779
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(664)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[372@763 372@763 mouseMove CMD 63760085 nil]
		targetOffset: 	58@0
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 63760085 372 763 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


[] in PasteUpMorph>>becomeActiveDuring:
	Receiver: a PasteUpMorph(1622) [world]
	Arguments and temporary variables: 
		aBlock: 	[closure] in HandMorph>>sendFocusEvent:to:clear:
	Receiver's instance variables: 
		bounds: 	0@0 corner: 1624@998
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(3095) a PreDebugWindow(654) a SystemWindow(3...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.97 g: 0.98 b: 1.0)
		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.03 g: 0.02 b: 0.0)
		model: 	a MorphicModel(1926)
		cursor: 	1
		padding: 	3
		backgroundMorph: 	nil
		isPartsBin: 	nil
		autoLineLayout: 	false
		indicateCursor: 	nil
		resizeToFit: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


BlockClosure>>on:do:
	Receiver: [closure] in PasteUpMorph>>becomeActiveDuring:
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[closure] in PasteUpMorph>>becomeActiveDuring:
		handlerActive: 	false
	Receiver's instance variables: 
		outerContext: 	PasteUpMorph>>becomeActiveDuring:
		startpc: 	67
		numArgs: 	0


PasteUpMorph>>becomeActiveDuring:
	Receiver: a PasteUpMorph(1622) [world]
	Arguments and temporary variables: 
		aBlock: 	[closure] in HandMorph>>sendFocusEvent:to:clear:
		priorWorld: 	a PasteUpMorph(1622) [world]
		priorHand: 	a HandMorph(3216)
		priorEvent: 	nil
	Receiver's instance variables: 
		bounds: 	0@0 corner: 1624@998
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(3095) a PreDebugWindow(654) a SystemWindow(3...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.97 g: 0.98 b: 1.0)
		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.03 g: 0.02 b: 0.0)
		model: 	a MorphicModel(1926)
		cursor: 	1
		padding: 	3
		backgroundMorph: 	nil
		isPartsBin: 	nil
		autoLineLayout: 	false
		indicateCursor: 	nil
		resizeToFit: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		focusHolder: 	a TextMorphForEditView(2378)
		aBlock: 	[closure] in HandMorph>>sendKeyboardEvent:
		w: 	a PasteUpMorph(1622) [world]
		result: 	#(nil)
	Receiver's instance variables: 
		bounds: 	372@763 corner: 388@779
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	372@763 corner: 388@779
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(664)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[372@763 372@763 mouseMove CMD 63760085 nil]
		targetOffset: 	58@0
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 63760085 372 763 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		focusHolder: 	a TextMorphForEditView(2378)
		aBlock: 	[closure] in HandMorph>>sendKeyboardEvent:
		result: 	nil
	Receiver's instance variables: 
		bounds: 	372@763 corner: 388@779
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	372@763 corner: 388@779
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(664)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[372@763 372@763 mouseMove CMD 63760085 nil]
		targetOffset: 	58@0
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 63760085 372 763 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>sendKeyboardEvent:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	372@763 corner: 388@779
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	372@763 corner: 388@779
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(664)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[372@763 372@763 mouseMove CMD 63760085 nil]
		targetOffset: 	58@0
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 63760085 372 763 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>handleEvent:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		evt: 	[keystroke '<Cmd-p>']
		ofs: 	nil
	Receiver's instance variables: 
		bounds: 	372@763 corner: 388@779
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	372@763 corner: 388@779
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(664)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[372@763 372@763 mouseMove CMD 63760085 nil]
		targetOffset: 	58@0
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 63760085 372 763 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>processEvents
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
		evtBuf: 	#(2 63760450 112 0 8 112 0 1)
		type: 	2
		hadAny: 	true
	Receiver's instance variables: 
		bounds: 	372@763 corner: 388@779
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	372@763 corner: 388@779
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(664)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[372@763 372@763 mouseMove CMD 63760085 nil]
		targetOffset: 	58@0
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 63760085 372 763 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


[] in WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		h: 	a HandMorph(3216)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1624@998
		canvas: 	a FormCanvas on: DisplayScreen(1624x998x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> an OverflowRowMorph(806))(an OverflowR...etc...
		lastStepTime: 	63760441
		lastStepMessage: 	nil
		lastCycleTime: 	63760482
		commandHistory: 	a CommandHistory
		alarms: 	a Heap()
		lastAlarmTime: 	63760441
		menuBuilder: 	a PragmaMenuBuilder


Array(SequenceableCollection)>>do:
	Receiver: an Array(a HandMorph(3216))
	Arguments and temporary variables: 
		aBlock: 	[closure] in WorldState>>doOneCycleNowFor:
		index: 	1
		indexLimiT: 	1
	Receiver's instance variables: 
an Array(a HandMorph(3216))


--- The full stack ---
ByteSymbol class(Object)>>error:
ByteSymbol class(Object)>>shouldNotImplement
ByteSymbol class(Symbol class)>>new:
UndefinedObject>>DoIt
Compiler>>evaluate:in:to:notifying:ifFail:logged:
[] in TextMorphEditor(ParagraphEditor)>>evaluateSelection
BlockClosure>>on:do:
TextMorphEditor(ParagraphEditor)>>evaluateSelection
TextMorphEditor(ParagraphEditor)>>printIt
[] in TextMorphEditor(ParagraphEditor)>>printIt:
TextMorphEditor(ParagraphEditor)>>terminateAndInitializeAround:
TextMorphEditor(ParagraphEditor)>>printIt:
TextMorphEditor(ParagraphEditor)>>dispatchOnKeyEvent:with:
TextMorphEditor>>dispatchOnKeyEvent:with:
TextMorphEditor(ParagraphEditor)>>keystroke:
TextMorphEditor>>keystroke:
[] in [] in TextMorphForEditView(TextMorph)>>keyStroke:
TextMorphForEditView(TextMorph)>>handleInteraction:
TextMorphForEditView>>handleInteraction:
[] in TextMorphForEditView(TextMorph)>>keyStroke:
StandardToolSet class>>codeCompletionAround:textMorph:keyStroke:
ToolSet class>>codeCompletionAround:textMorph:keyStroke:
TextMorphForEditView(TextMorph)>>keyStroke:
TextMorphForEditView>>keyStroke:
TextMorphForEditView(TextMorph)>>handleKeystroke:
KeyboardEvent>>sentTo:
TextMorphForEditView(Morph)>>handleEvent:
TextMorphForEditView(Morph)>>handleFocusEvent:
[] in HandMorph>>sendFocusEvent:to:clear:
[] in PasteUpMorph>>becomeActiveDuring:
BlockClosure>>on:do:
PasteUpMorph>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendKeyboardEvent:
HandMorph>>handleEvent:
HandMorph>>processEvents
[] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
PasteUpMorph>>doOneCycle
[] in Project class>>spawnNewProcess
[] in BlockClosure>>newProcess
------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Symbol cannot have variable sized instances
25 January 2011 10:44:25 am

VM: Mac OS - intel - 1066 - PharoCore1.1ALPHA of '19 October 2009' [Latest update: #11239] Squeak VM 4.2.2b1
Image: PharoCore1.1ALPHA [Latest update: #11239]

SecurityManager state:
Restricted: false
FileAccess: true
SocketAccess: true
Working Dir /Users/arnaudj/Desktop/GIT/Handle/VM
Trusted Dir /foobar/tooBar/forSqueak/bogus
Untrusted Dir /Users/arnaudj/Library/Preferences/Squeak/Internet/My Squeak

Symbol class(Object)>>error:
	Receiver: Symbol
	Arguments and temporary variables: 
		aString: 	'Symbol cannot have variable sized instances'
	Receiver's instance variables: 
		superclass: 	String
		methodDict: 	a MethodDictionary(#=->(Symbol>>#= "a CompiledMethod(836)") #asMuta...etc...
		format: 	2
		instanceVariables: 	nil
		organization: 	('accessing' at:put: precedence replaceFrom:to:with:startingAt:)
...etc...
		subclasses: 	{ByteSymbol. WideSymbol}
		name: 	#Symbol
		classPool: 	a Dictionary(#NewSymbols->a WeakSet() #OneCharacterSymbols->#(#' ' #...etc...
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'Collections-Strings'
		traitComposition: 	nil
		localSelectors: 	nil


Symbol class(Behavior)>>basicNew:
	Receiver: Symbol
	Arguments and temporary variables: 
		sizeRequested: 	5
	Receiver's instance variables: 
		superclass: 	String
		methodDict: 	a MethodDictionary(#=->(Symbol>>#= "a CompiledMethod(836)") #asMuta...etc...
		format: 	2
		instanceVariables: 	nil
		organization: 	('accessing' at:put: precedence replaceFrom:to:with:startingAt:)
...etc...
		subclasses: 	{ByteSymbol. WideSymbol}
		name: 	#Symbol
		classPool: 	a Dictionary(#NewSymbols->a WeakSet() #OneCharacterSymbols->#(#' ' #...etc...
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'Collections-Strings'
		traitComposition: 	nil
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

Compiler>>evaluate:in:to:notifying:ifFail:logged:
	Receiver: a Compiler
	Arguments and temporary variables: 
		textOrStream: 	a ReadWriteStream '(Symbol basicNew:5) size'
		aContext: 	nil
		receiver: 	nil
		aRequestor: 	a TextMorphEditor
		failBlock: 	[closure] in [] in TextMorphEditor(ParagraphEditor)>>evaluateSelecti...etc...
		logFlag: 	true
		methodNode: 	DoIt
	^ (Symbol basicNew: 5) size
		method: 	(UndefinedObject>>#DoIt "a CompiledMethod(3281)")
		value: 	nil
		toLog: 	nil
		itsSelection: 	nil
		itsSelectionString: 	nil
	Receiver's instance variables: 
		sourceStream: 	a ReadWriteStream '(Symbol basicNew:5) size'
		requestor: 	a TextMorphEditor
		class: 	UndefinedObject
		category: 	nil
		context: 	nil
		parser: 	a Parser


[] in TextMorphEditor(ParagraphEditor)>>evaluateSelection
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 25 and rectangle 154@0 corner: 154@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(2 to: 1)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(24 to: 23)
		pivotBlock: 	a CharacterBlock with index 14 and character $N and rectangle 88@0 ...etc...


BlockClosure>>on:do:
	Receiver: [closure] in TextMorphEditor(ParagraphEditor)>>evaluateSelection
	Arguments and temporary variables: 
		exception: 	OutOfScopeNotification
		handlerAction: 	[closure] in TextMorphEditor(ParagraphEditor)>>evaluateSelection...etc...
		handlerActive: 	true
	Receiver's instance variables: 
		outerContext: 	TextMorphEditor(ParagraphEditor)>>evaluateSelection
		startpc: 	116
		numArgs: 	0


TextMorphEditor(ParagraphEditor)>>evaluateSelection
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 25 and rectangle 154@0 corner: 154@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(2 to: 1)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(24 to: 23)
		pivotBlock: 	a CharacterBlock with index 14 and character $N and rectangle 88@0 ...etc...


TextMorphEditor(ParagraphEditor)>>printIt
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		result: 	nil
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 25 and rectangle 154@0 corner: 154@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(2 to: 1)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(24 to: 23)
		pivotBlock: 	a CharacterBlock with index 14 and character $N and rectangle 88@0 ...etc...


[] in TextMorphEditor(ParagraphEditor)>>printIt:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 25 and rectangle 154@0 corner: 154@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(2 to: 1)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(24 to: 23)
		pivotBlock: 	a CharacterBlock with index 14 and character $N and rectangle 88@0 ...etc...


TextMorphEditor(ParagraphEditor)>>terminateAndInitializeAround:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		aBlock: 	[closure] in TextMorphEditor(ParagraphEditor)>>printIt:
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 25 and rectangle 154@0 corner: 154@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(2 to: 1)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(24 to: 23)
		pivotBlock: 	a CharacterBlock with index 14 and character $N and rectangle 88@0 ...etc...


TextMorphEditor(ParagraphEditor)>>printIt:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		characterStream: 	a WriteStream ''
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 25 and rectangle 154@0 corner: 154@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(2 to: 1)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(24 to: 23)
		pivotBlock: 	a CharacterBlock with index 14 and character $N and rectangle 88@0 ...etc...


TextMorphEditor(ParagraphEditor)>>dispatchOnKeyEvent:with:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
		typeAheadStream: 	a WriteStream ''
		honorCommandKeys: 	true
		keyValue: 	112
		keyChar: 	$p
		char: 	$p
		action: 	#printIt:
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 25 and rectangle 154@0 corner: 154@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(2 to: 1)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(24 to: 23)
		pivotBlock: 	a CharacterBlock with index 14 and character $N and rectangle 88@0 ...etc...


TextMorphEditor>>dispatchOnKeyEvent:with:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
		typeAheadStream: 	a WriteStream ''
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 25 and rectangle 154@0 corner: 154@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(2 to: 1)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(24 to: 23)
		pivotBlock: 	a CharacterBlock with index 14 and character $N and rectangle 88@0 ...etc...


TextMorphEditor(ParagraphEditor)>>keystroke:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
		typeAhead: 	a WriteStream ''
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 25 and rectangle 154@0 corner: 154@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(2 to: 1)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(24 to: 23)
		pivotBlock: 	a CharacterBlock with index 14 and character $N and rectangle 88@0 ...etc...


TextMorphEditor>>keystroke:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 25 and rectangle 154@0 corner: 154@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(2 to: 1)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(24 to: 23)
		pivotBlock: 	a CharacterBlock with index 14 and character $N and rectangle 88@0 ...etc...


[] in [] in TextMorphForEditView(TextMorph)>>keyStroke:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63791053)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


TextMorphForEditView(TextMorph)>>handleInteraction:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		interactionBlock: 	[closure] in [] in TextMorphForEditView(TextMorph)>>keyStroke...etc...
		oldEditor: 	a TextMorphEditor
		oldParagraph: 	a MultiNewParagraph
		oldText: 	a Text for '(Symbol basicNew:5) size'
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63791053)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


TextMorphForEditView>>handleInteraction:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		interActionBlock: 	[closure] in [] in TextMorphForEditView(TextMorph)>>keyStroke...etc...
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63791053)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


[] in TextMorphForEditView(TextMorph)>>keyStroke:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
		action: 	nil
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63791053)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


StandardToolSet class>>codeCompletionAround:textMorph:keyStroke:
	Receiver: StandardToolSet
	Arguments and temporary variables: 
		aBlock: 	[closure] in TextMorphForEditView(TextMorph)>>keyStroke:
		aTextMorph: 	a TextMorphForEditView(2378)
		evt: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	2
		instanceVariables: 	nil
		organization: 	('as yet unclassified')

		subclasses: 	nil
		name: 	#StandardToolSet
		classPool: 	nil
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'Tools-Base'
		traitComposition: 	nil
		localSelectors: 	nil


ToolSet class>>codeCompletionAround:textMorph:keyStroke:
	Receiver: ToolSet
	Arguments and temporary variables: 
		aBlock: 	[closure] in TextMorphForEditView(TextMorph)>>keyStroke:
		aTextMorph: 	a TextMorphForEditView(2378)
		evt: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		superclass: 	AppRegistry
		methodDict: 	a MethodDictionary()
		format: 	2
		instanceVariables: 	nil
		organization: 	('as yet unclassified')

		subclasses: 	nil
		name: 	#ToolSet
		classPool: 	nil
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'System-Applications'
		traitComposition: 	nil
		localSelectors: 	nil
		registeredClasses: 	an OrderedCollection(StandardToolSet)
		default: 	StandardToolSet


TextMorphForEditView(TextMorph)>>keyStroke:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63791053)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


TextMorphForEditView>>keyStroke:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
		view: 	a PluggableTextMorph(3542)
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63791053)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


TextMorphForEditView(TextMorph)>>handleKeystroke:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		pasteUp: 	nil
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63791053)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


KeyboardEvent>>sentTo:
	Receiver: [keystroke '<Cmd-p>']
	Arguments and temporary variables: 
		anObject: 	a TextMorphForEditView(2378)
	Receiver's instance variables: 
		timeStamp: 	63790546
		source: 	a HandMorph(3216)
		windowIndex: 	nil
		type: 	#keystroke
		buttons: 	64
		position: 	91@45
		handler: 	nil
		wasHandled: 	true
		keyValue: 	112
		charCode: 	112
		scanCode: 	35


TextMorphForEditView(Morph)>>handleEvent:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63791053)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


TextMorphForEditView(Morph)>>handleFocusEvent:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 63791053)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


[] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		focusHolder: 	a TextMorphForEditView(2378)
		result: 	#(nil)
	Receiver's instance variables: 
		bounds: 	1264@214 corner: 1280@230
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	1264@214 corner: 1280@230
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1999)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[1264@214 1264@214 mouseMove CMD 63790413 nil]
		targetOffset: 	90@6
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 63790413 1264 214 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


[] in PasteUpMorph>>becomeActiveDuring:
	Receiver: a PasteUpMorph(1622) [world]
	Arguments and temporary variables: 
		aBlock: 	[closure] in HandMorph>>sendFocusEvent:to:clear:
	Receiver's instance variables: 
		bounds: 	0@0 corner: 1624@998
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(3095) a PreDebugWindow(48) a SystemWindow(30...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.97 g: 0.98 b: 1.0)
		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.03 g: 0.02 b: 0.0)
		model: 	a MorphicModel(1926)
		cursor: 	1
		padding: 	3
		backgroundMorph: 	nil
		isPartsBin: 	nil
		autoLineLayout: 	false
		indicateCursor: 	nil
		resizeToFit: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


BlockClosure>>on:do:
	Receiver: [closure] in PasteUpMorph>>becomeActiveDuring:
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[closure] in PasteUpMorph>>becomeActiveDuring:
		handlerActive: 	false
	Receiver's instance variables: 
		outerContext: 	PasteUpMorph>>becomeActiveDuring:
		startpc: 	67
		numArgs: 	0


PasteUpMorph>>becomeActiveDuring:
	Receiver: a PasteUpMorph(1622) [world]
	Arguments and temporary variables: 
		aBlock: 	[closure] in HandMorph>>sendFocusEvent:to:clear:
		priorWorld: 	a PasteUpMorph(1622) [world]
		priorHand: 	a HandMorph(3216)
		priorEvent: 	nil
	Receiver's instance variables: 
		bounds: 	0@0 corner: 1624@998
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(3095) a PreDebugWindow(48) a SystemWindow(30...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.97 g: 0.98 b: 1.0)
		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.03 g: 0.02 b: 0.0)
		model: 	a MorphicModel(1926)
		cursor: 	1
		padding: 	3
		backgroundMorph: 	nil
		isPartsBin: 	nil
		autoLineLayout: 	false
		indicateCursor: 	nil
		resizeToFit: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		focusHolder: 	a TextMorphForEditView(2378)
		aBlock: 	[closure] in HandMorph>>sendKeyboardEvent:
		w: 	a PasteUpMorph(1622) [world]
		result: 	#(nil)
	Receiver's instance variables: 
		bounds: 	1264@214 corner: 1280@230
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	1264@214 corner: 1280@230
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1999)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[1264@214 1264@214 mouseMove CMD 63790413 nil]
		targetOffset: 	90@6
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 63790413 1264 214 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		focusHolder: 	a TextMorphForEditView(2378)
		aBlock: 	[closure] in HandMorph>>sendKeyboardEvent:
		result: 	nil
	Receiver's instance variables: 
		bounds: 	1264@214 corner: 1280@230
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	1264@214 corner: 1280@230
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1999)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[1264@214 1264@214 mouseMove CMD 63790413 nil]
		targetOffset: 	90@6
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 63790413 1264 214 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>sendKeyboardEvent:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	1264@214 corner: 1280@230
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	1264@214 corner: 1280@230
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1999)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[1264@214 1264@214 mouseMove CMD 63790413 nil]
		targetOffset: 	90@6
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 63790413 1264 214 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>handleEvent:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		evt: 	[keystroke '<Cmd-p>']
		ofs: 	nil
	Receiver's instance variables: 
		bounds: 	1264@214 corner: 1280@230
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	1264@214 corner: 1280@230
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1999)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[1264@214 1264@214 mouseMove CMD 63790413 nil]
		targetOffset: 	90@6
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 63790413 1264 214 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>processEvents
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
		evtBuf: 	#(2 63790546 112 0 8 112 0 1)
		type: 	2
		hadAny: 	true
	Receiver's instance variables: 
		bounds: 	1264@214 corner: 1280@230
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	1264@214 corner: 1280@230
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1999)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[1264@214 1264@214 mouseMove CMD 63790413 nil]
		targetOffset: 	90@6
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 63790413 1264 214 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


[] in WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		h: 	a HandMorph(3216)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1624@998
		canvas: 	a FormCanvas on: DisplayScreen(1624x998x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a PreDebugWindow(48))(a PreDebugWindow...etc...
		lastStepTime: 	63790533
		lastStepMessage: 	nil
		lastCycleTime: 	63790573
		commandHistory: 	a CommandHistory
		alarms: 	a Heap()
		lastAlarmTime: 	63790533
		menuBuilder: 	a PragmaMenuBuilder


Array(SequenceableCollection)>>do:
	Receiver: an Array(a HandMorph(3216))
	Arguments and temporary variables: 
		aBlock: 	[closure] in WorldState>>doOneCycleNowFor:
		index: 	1
		indexLimiT: 	1
	Receiver's instance variables: 
an Array(a HandMorph(3216))

WorldState>>handsDo:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aBlock: 	[closure] in WorldState>>doOneCycleNowFor:
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1624@998
		canvas: 	a FormCanvas on: DisplayScreen(1624x998x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a PreDebugWindow(48))(a PreDebugWindow...etc...
		lastStepTime: 	63790533
		lastStepMessage: 	nil
		lastCycleTime: 	63790573
		commandHistory: 	a CommandHistory
		alarms: 	a Heap()
		lastAlarmTime: 	63790533
		menuBuilder: 	a PragmaMenuBuilder



--- The full stack ---
Symbol class(Object)>>error:
Symbol class(Behavior)>>basicNew:
UndefinedObject>>DoIt
Compiler>>evaluate:in:to:notifying:ifFail:logged:
[] in TextMorphEditor(ParagraphEditor)>>evaluateSelection
BlockClosure>>on:do:
TextMorphEditor(ParagraphEditor)>>evaluateSelection
TextMorphEditor(ParagraphEditor)>>printIt
[] in TextMorphEditor(ParagraphEditor)>>printIt:
TextMorphEditor(ParagraphEditor)>>terminateAndInitializeAround:
TextMorphEditor(ParagraphEditor)>>printIt:
TextMorphEditor(ParagraphEditor)>>dispatchOnKeyEvent:with:
TextMorphEditor>>dispatchOnKeyEvent:with:
TextMorphEditor(ParagraphEditor)>>keystroke:
TextMorphEditor>>keystroke:
[] in [] in TextMorphForEditView(TextMorph)>>keyStroke:
TextMorphForEditView(TextMorph)>>handleInteraction:
TextMorphForEditView>>handleInteraction:
[] in TextMorphForEditView(TextMorph)>>keyStroke:
StandardToolSet class>>codeCompletionAround:textMorph:keyStroke:
ToolSet class>>codeCompletionAround:textMorph:keyStroke:
TextMorphForEditView(TextMorph)>>keyStroke:
TextMorphForEditView>>keyStroke:
TextMorphForEditView(TextMorph)>>handleKeystroke:
KeyboardEvent>>sentTo:
TextMorphForEditView(Morph)>>handleEvent:
TextMorphForEditView(Morph)>>handleFocusEvent:
[] in HandMorph>>sendFocusEvent:to:clear:
[] in PasteUpMorph>>becomeActiveDuring:
BlockClosure>>on:do:
PasteUpMorph>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendKeyboardEvent:
HandMorph>>handleEvent:
HandMorph>>processEvents
[] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
PasteUpMorph>>doOneCycle
[] in Project class>>spawnNewProcess
[] in BlockClosure>>newProcess
------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Symbol cannot have variable sized instances
25 January 2011 10:48:19 am

VM: Mac OS - intel - 1066 - PharoCore1.1ALPHA of '19 October 2009' [Latest update: #11239] Squeak VM 4.2.2b1
Image: PharoCore1.1ALPHA [Latest update: #11239]

SecurityManager state:
Restricted: false
FileAccess: true
SocketAccess: true
Working Dir /Users/arnaudj/Desktop/GIT/Handle/VM
Trusted Dir /foobar/tooBar/forSqueak/bogus
Untrusted Dir /Users/arnaudj/Library/Preferences/Squeak/Internet/My Squeak

Symbol class(Object)>>error:
	Receiver: Symbol
	Arguments and temporary variables: 
		aString: 	'Symbol cannot have variable sized instances'
	Receiver's instance variables: 
		superclass: 	String
		methodDict: 	a MethodDictionary(#=->(Symbol>>#= "a CompiledMethod(836)") #asMuta...etc...
		format: 	2
		instanceVariables: 	nil
		organization: 	('accessing' at:put: precedence replaceFrom:to:with:startingAt:)
...etc...
		subclasses: 	{ByteSymbol. WideSymbol}
		name: 	#Symbol
		classPool: 	a Dictionary(#NewSymbols->a WeakSet() #OneCharacterSymbols->#(#' ' #...etc...
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'Collections-Strings'
		traitComposition: 	nil
		localSelectors: 	nil


Symbol class(Behavior)>>basicNew:
	Receiver: Symbol
	Arguments and temporary variables: 
		sizeRequested: 	5
	Receiver's instance variables: 
		superclass: 	String
		methodDict: 	a MethodDictionary(#=->(Symbol>>#= "a CompiledMethod(836)") #asMuta...etc...
		format: 	2
		instanceVariables: 	nil
		organization: 	('accessing' at:put: precedence replaceFrom:to:with:startingAt:)
...etc...
		subclasses: 	{ByteSymbol. WideSymbol}
		name: 	#Symbol
		classPool: 	a Dictionary(#NewSymbols->a WeakSet() #OneCharacterSymbols->#(#' ' #...etc...
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'Collections-Strings'
		traitComposition: 	nil
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

Compiler>>evaluate:in:to:notifying:ifFail:logged:
	Receiver: a Compiler
	Arguments and temporary variables: 
		textOrStream: 	a ReadWriteStream '(Symbol basicNew:5) size '
		aContext: 	nil
		receiver: 	nil
		aRequestor: 	a TextMorphEditor
		failBlock: 	[closure] in [] in TextMorphEditor(ParagraphEditor)>>evaluateSelecti...etc...
		logFlag: 	true
		methodNode: 	DoIt
	^ (Symbol basicNew: 5) size
		method: 	(UndefinedObject>>#DoIt "a CompiledMethod(3963)")
		value: 	nil
		toLog: 	nil
		itsSelection: 	nil
		itsSelectionString: 	nil
	Receiver's instance variables: 
		sourceStream: 	a ReadWriteStream '(Symbol basicNew:5) size '
		requestor: 	a TextMorphEditor
		class: 	UndefinedObject
		category: 	nil
		context: 	nil
		parser: 	a Parser


[] in TextMorphEditor(ParagraphEditor)>>evaluateSelection
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 co...etc...
		stopBlock: 	a CharacterBlock with index 26 and rectangle 158@0 corner: 158@16
 i...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(25 to: 25)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(1 to: 24)
		pivotBlock: 	a CharacterBlock with index 25 and character Character space and re...etc...


BlockClosure>>on:do:
	Receiver: [closure] in TextMorphEditor(ParagraphEditor)>>evaluateSelection
	Arguments and temporary variables: 
		exception: 	OutOfScopeNotification
		handlerAction: 	[closure] in TextMorphEditor(ParagraphEditor)>>evaluateSelection...etc...
		handlerActive: 	true
	Receiver's instance variables: 
		outerContext: 	TextMorphEditor(ParagraphEditor)>>evaluateSelection
		startpc: 	116
		numArgs: 	0


TextMorphEditor(ParagraphEditor)>>evaluateSelection
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 co...etc...
		stopBlock: 	a CharacterBlock with index 26 and rectangle 158@0 corner: 158@16
 i...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(25 to: 25)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(1 to: 24)
		pivotBlock: 	a CharacterBlock with index 25 and character Character space and re...etc...


TextMorphEditor(ParagraphEditor)>>printIt
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		result: 	nil
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 co...etc...
		stopBlock: 	a CharacterBlock with index 26 and rectangle 158@0 corner: 158@16
 i...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(25 to: 25)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(1 to: 24)
		pivotBlock: 	a CharacterBlock with index 25 and character Character space and re...etc...


[] in TextMorphEditor(ParagraphEditor)>>printIt:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 co...etc...
		stopBlock: 	a CharacterBlock with index 26 and rectangle 158@0 corner: 158@16
 i...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(25 to: 25)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(1 to: 24)
		pivotBlock: 	a CharacterBlock with index 25 and character Character space and re...etc...


TextMorphEditor(ParagraphEditor)>>terminateAndInitializeAround:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		aBlock: 	[closure] in TextMorphEditor(ParagraphEditor)>>printIt:
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 co...etc...
		stopBlock: 	a CharacterBlock with index 26 and rectangle 158@0 corner: 158@16
 i...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(25 to: 25)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(1 to: 24)
		pivotBlock: 	a CharacterBlock with index 25 and character Character space and re...etc...


TextMorphEditor(ParagraphEditor)>>printIt:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		characterStream: 	a WriteStream ''
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 co...etc...
		stopBlock: 	a CharacterBlock with index 26 and rectangle 158@0 corner: 158@16
 i...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(25 to: 25)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(1 to: 24)
		pivotBlock: 	a CharacterBlock with index 25 and character Character space and re...etc...


TextMorphEditor(ParagraphEditor)>>dispatchOnKeyEvent:with:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
		typeAheadStream: 	a WriteStream ''
		honorCommandKeys: 	true
		keyValue: 	112
		keyChar: 	$p
		char: 	$p
		action: 	#printIt:
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 co...etc...
		stopBlock: 	a CharacterBlock with index 26 and rectangle 158@0 corner: 158@16
 i...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(25 to: 25)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(1 to: 24)
		pivotBlock: 	a CharacterBlock with index 25 and character Character space and re...etc...


TextMorphEditor>>dispatchOnKeyEvent:with:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
		typeAheadStream: 	a WriteStream ''
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 co...etc...
		stopBlock: 	a CharacterBlock with index 26 and rectangle 158@0 corner: 158@16
 i...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(25 to: 25)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(1 to: 24)
		pivotBlock: 	a CharacterBlock with index 25 and character Character space and re...etc...


TextMorphEditor(ParagraphEditor)>>keystroke:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
		typeAhead: 	a WriteStream ''
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 co...etc...
		stopBlock: 	a CharacterBlock with index 26 and rectangle 158@0 corner: 158@16
 i...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(25 to: 25)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(1 to: 24)
		pivotBlock: 	a CharacterBlock with index 25 and character Character space and re...etc...


TextMorphEditor>>keystroke:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 co...etc...
		stopBlock: 	a CharacterBlock with index 26 and rectangle 158@0 corner: 158@16
 i...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'B'
		selectionShowing: 	false
		otherInterval: 	(25 to: 25)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2378)
		oldInterval: 	(1 to: 24)
		pivotBlock: 	a CharacterBlock with index 25 and character Character space and re...etc...


[] in [] in TextMorphForEditView(TextMorph)>>keyStroke:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 64024730)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size '
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


TextMorphForEditView(TextMorph)>>handleInteraction:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		interactionBlock: 	[closure] in [] in TextMorphForEditView(TextMorph)>>keyStroke...etc...
		oldEditor: 	a TextMorphEditor
		oldParagraph: 	a MultiNewParagraph
		oldText: 	a Text for '(Symbol basicNew:5) size '
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 64024730)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size '
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


TextMorphForEditView>>handleInteraction:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		interActionBlock: 	[closure] in [] in TextMorphForEditView(TextMorph)>>keyStroke...etc...
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 64024730)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size '
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


[] in TextMorphForEditView(TextMorph)>>keyStroke:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
		action: 	nil
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 64024730)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size '
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


StandardToolSet class>>codeCompletionAround:textMorph:keyStroke:
	Receiver: StandardToolSet
	Arguments and temporary variables: 
		aBlock: 	[closure] in TextMorphForEditView(TextMorph)>>keyStroke:
		aTextMorph: 	a TextMorphForEditView(2378)
		evt: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	2
		instanceVariables: 	nil
		organization: 	('as yet unclassified')

		subclasses: 	nil
		name: 	#StandardToolSet
		classPool: 	nil
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'Tools-Base'
		traitComposition: 	nil
		localSelectors: 	nil


ToolSet class>>codeCompletionAround:textMorph:keyStroke:
	Receiver: ToolSet
	Arguments and temporary variables: 
		aBlock: 	[closure] in TextMorphForEditView(TextMorph)>>keyStroke:
		aTextMorph: 	a TextMorphForEditView(2378)
		evt: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		superclass: 	AppRegistry
		methodDict: 	a MethodDictionary()
		format: 	2
		instanceVariables: 	nil
		organization: 	('as yet unclassified')

		subclasses: 	nil
		name: 	#ToolSet
		classPool: 	nil
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'System-Applications'
		traitComposition: 	nil
		localSelectors: 	nil
		registeredClasses: 	an OrderedCollection(StandardToolSet)
		default: 	StandardToolSet


TextMorphForEditView(TextMorph)>>keyStroke:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 64024730)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size '
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


TextMorphForEditView>>keyStroke:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
		view: 	a PluggableTextMorph(3542)
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 64024730)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size '
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


TextMorphForEditView(TextMorph)>>handleKeystroke:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		pasteUp: 	nil
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 64024730)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size '
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


KeyboardEvent>>sentTo:
	Receiver: [keystroke '<Cmd-p>']
	Arguments and temporary variables: 
		anObject: 	a TextMorphForEditView(2378)
	Receiver's instance variables: 
		timeStamp: 	64024225
		source: 	a HandMorph(3216)
		windowIndex: 	nil
		type: 	#keystroke
		buttons: 	64
		position: 	260@61
		handler: 	nil
		wasHandled: 	true
		keyValue: 	112
		charCode: 	112
		scanCode: 	35


TextMorphForEditView(Morph)>>handleEvent:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 64024730)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size '
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


TextMorphForEditView(Morph)>>handleFocusEvent:
	Receiver: a TextMorphForEditView(2378)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(3875)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1325) [other:  (blinkStart -> 64024730)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Symbol basicNew:5) size '
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3542)
		acceptOnCR: 	false


[] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		focusHolder: 	a TextMorphForEditView(2378)
		result: 	#(nil)
	Receiver's instance variables: 
		bounds: 	1433@230 corner: 1449@246
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	1433@230 corner: 1449@246
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(757)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[1433@230 1433@230 mouseMove CMD 64023777 nil]
		targetOffset: 	263@74
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 64023777 1433 230 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


[] in PasteUpMorph>>becomeActiveDuring:
	Receiver: a PasteUpMorph(1622) [world]
	Arguments and temporary variables: 
		aBlock: 	[closure] in HandMorph>>sendFocusEvent:to:clear:
	Receiver's instance variables: 
		bounds: 	0@0 corner: 1624@998
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(3095) a PreDebugWindow(3456) a SystemWindow(...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.97 g: 0.98 b: 1.0)
		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.03 g: 0.02 b: 0.0)
		model: 	a MorphicModel(1926)
		cursor: 	1
		padding: 	3
		backgroundMorph: 	nil
		isPartsBin: 	nil
		autoLineLayout: 	false
		indicateCursor: 	nil
		resizeToFit: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


BlockClosure>>on:do:
	Receiver: [closure] in PasteUpMorph>>becomeActiveDuring:
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[closure] in PasteUpMorph>>becomeActiveDuring:
		handlerActive: 	false
	Receiver's instance variables: 
		outerContext: 	PasteUpMorph>>becomeActiveDuring:
		startpc: 	67
		numArgs: 	0


PasteUpMorph>>becomeActiveDuring:
	Receiver: a PasteUpMorph(1622) [world]
	Arguments and temporary variables: 
		aBlock: 	[closure] in HandMorph>>sendFocusEvent:to:clear:
		priorWorld: 	a PasteUpMorph(1622) [world]
		priorHand: 	a HandMorph(3216)
		priorEvent: 	nil
	Receiver's instance variables: 
		bounds: 	0@0 corner: 1624@998
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(3095) a PreDebugWindow(3456) a SystemWindow(...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.97 g: 0.98 b: 1.0)
		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.03 g: 0.02 b: 0.0)
		model: 	a MorphicModel(1926)
		cursor: 	1
		padding: 	3
		backgroundMorph: 	nil
		isPartsBin: 	nil
		autoLineLayout: 	false
		indicateCursor: 	nil
		resizeToFit: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		focusHolder: 	a TextMorphForEditView(2378)
		aBlock: 	[closure] in HandMorph>>sendKeyboardEvent:
		w: 	a PasteUpMorph(1622) [world]
		result: 	#(nil)
	Receiver's instance variables: 
		bounds: 	1433@230 corner: 1449@246
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	1433@230 corner: 1449@246
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(757)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[1433@230 1433@230 mouseMove CMD 64023777 nil]
		targetOffset: 	263@74
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 64023777 1433 230 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		focusHolder: 	a TextMorphForEditView(2378)
		aBlock: 	[closure] in HandMorph>>sendKeyboardEvent:
		result: 	nil
	Receiver's instance variables: 
		bounds: 	1433@230 corner: 1449@246
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	1433@230 corner: 1449@246
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(757)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[1433@230 1433@230 mouseMove CMD 64023777 nil]
		targetOffset: 	263@74
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 64023777 1433 230 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>sendKeyboardEvent:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	1433@230 corner: 1449@246
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	1433@230 corner: 1449@246
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(757)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[1433@230 1433@230 mouseMove CMD 64023777 nil]
		targetOffset: 	263@74
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 64023777 1433 230 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>handleEvent:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		evt: 	[keystroke '<Cmd-p>']
		ofs: 	nil
	Receiver's instance variables: 
		bounds: 	1433@230 corner: 1449@246
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	1433@230 corner: 1449@246
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(757)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[1433@230 1433@230 mouseMove CMD 64023777 nil]
		targetOffset: 	263@74
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 64023777 1433 230 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>processEvents
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
		evtBuf: 	#(2 64024225 112 0 8 112 0 1)
		type: 	2
		hadAny: 	true
	Receiver's instance variables: 
		bounds: 	1433@230 corner: 1449@246
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	1433@230 corner: 1449@246
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(757)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[1433@230 1433@230 mouseMove CMD 64023777 nil]
		targetOffset: 	263@74
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 64023777 1433 230 0 8 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


[] in WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		h: 	a HandMorph(3216)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1624@998
		canvas: 	a FormCanvas on: DisplayScreen(1624x998x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> an OverflowRowMorph(806))(an OverflowR...etc...
		lastStepTime: 	64024210
		lastStepMessage: 	nil
		lastCycleTime: 	64024251
		commandHistory: 	a CommandHistory
		alarms: 	a Heap()
		lastAlarmTime: 	64024210
		menuBuilder: 	a PragmaMenuBuilder


Array(SequenceableCollection)>>do:
	Receiver: an Array(a HandMorph(3216))
	Arguments and temporary variables: 
		aBlock: 	[closure] in WorldState>>doOneCycleNowFor:
		index: 	1
		indexLimiT: 	1
	Receiver's instance variables: 
an Array(a HandMorph(3216))

WorldState>>handsDo:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aBlock: 	[closure] in WorldState>>doOneCycleNowFor:
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1624@998
		canvas: 	a FormCanvas on: DisplayScreen(1624x998x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> an OverflowRowMorph(806))(an OverflowR...etc...
		lastStepTime: 	64024210
		lastStepMessage: 	nil
		lastCycleTime: 	64024251
		commandHistory: 	a CommandHistory
		alarms: 	a Heap()
		lastAlarmTime: 	64024210
		menuBuilder: 	a PragmaMenuBuilder



--- The full stack ---
Symbol class(Object)>>error:
Symbol class(Behavior)>>basicNew:
UndefinedObject>>DoIt
Compiler>>evaluate:in:to:notifying:ifFail:logged:
[] in TextMorphEditor(ParagraphEditor)>>evaluateSelection
BlockClosure>>on:do:
TextMorphEditor(ParagraphEditor)>>evaluateSelection
TextMorphEditor(ParagraphEditor)>>printIt
[] in TextMorphEditor(ParagraphEditor)>>printIt:
TextMorphEditor(ParagraphEditor)>>terminateAndInitializeAround:
TextMorphEditor(ParagraphEditor)>>printIt:
TextMorphEditor(ParagraphEditor)>>dispatchOnKeyEvent:with:
TextMorphEditor>>dispatchOnKeyEvent:with:
TextMorphEditor(ParagraphEditor)>>keystroke:
TextMorphEditor>>keystroke:
[] in [] in TextMorphForEditView(TextMorph)>>keyStroke:
TextMorphForEditView(TextMorph)>>handleInteraction:
TextMorphForEditView>>handleInteraction:
[] in TextMorphForEditView(TextMorph)>>keyStroke:
StandardToolSet class>>codeCompletionAround:textMorph:keyStroke:
ToolSet class>>codeCompletionAround:textMorph:keyStroke:
TextMorphForEditView(TextMorph)>>keyStroke:
TextMorphForEditView>>keyStroke:
TextMorphForEditView(TextMorph)>>handleKeystroke:
KeyboardEvent>>sentTo:
TextMorphForEditView(Morph)>>handleEvent:
TextMorphForEditView(Morph)>>handleFocusEvent:
[] in HandMorph>>sendFocusEvent:to:clear:
[] in PasteUpMorph>>becomeActiveDuring:
BlockClosure>>on:do:
PasteUpMorph>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendKeyboardEvent:
HandMorph>>handleEvent:
HandMorph>>processEvents
[] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
PasteUpMorph>>doOneCycle
[] in Project class>>spawnNewProcess
[] in BlockClosure>>newProcess
------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Object>>format
2 February 2011 2:37:13 pm

VM: Mac OS - intel - 1066 - Squeak4.1 of 17 April 2010 [latest update: #9957] 21.0
Image: PharoCore1.1ALPHA [Latest update: #11239]

SecurityManager state:
Restricted: false
FileAccess: true
SocketAccess: true
Working Dir /Users/arnaudj/Desktop/GIT/Handle/VM
Trusted Dir /foobar/tooBar/forSqueak/bogus/
Untrusted Dir /Users/arnaudj/Library/Preferences/Squeak/Internet/My Squeak/

Object>>doesNotUnderstand: #format
	Receiver: an Object
	Arguments and temporary variables: 
		t1: 	format
		t2: 	MessageNotUnderstood: Object>>format
		t3: 	nil
	Receiver's instance variables: 
an Object

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

Compiler>>evaluate:in:to:notifying:ifFail:logged:
	Receiver: a Compiler
	Arguments and temporary variables: 
		textOrStream: 	a ReadWriteStream '(Object new ) format'
		aContext: 	nil
		receiver: 	nil
		aRequestor: 	a TextMorphEditor
		failBlock: 	[closure] in [] in TextMorphEditor(ParagraphEditor)>>evaluateSelecti...etc...
		logFlag: 	true
		methodNode: 	DoIt
	^ Object new format
		method: 	(UndefinedObject>>#DoIt "a CompiledMethod(1126)")
		value: 	nil
		toLog: 	nil
		itsSelection: 	nil
		itsSelectionString: 	nil
	Receiver's instance variables: 
		sourceStream: 	a ReadWriteStream '(Object new ) format'
		requestor: 	a TextMorphEditor
		class: 	UndefinedObject
		category: 	nil
		context: 	nil
		parser: 	a Parser


[] in TextMorphEditor(ParagraphEditor)>>evaluateSelection
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		t2: 	nil
		t3: 	nil
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 21 and rectangle 128@0 corner: 128@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'O'
		selectionShowing: 	false
		otherInterval: 	(20 to: 20)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2477)
		oldInterval: 	nil
		pivotBlock: 	nil


BlockClosure>>on:do:
	Receiver: [closure] in TextMorphEditor(ParagraphEditor)>>evaluateSelection
	Arguments and temporary variables: 
		exception: 	OutOfScopeNotification
		handlerAction: 	[closure] in TextMorphEditor(ParagraphEditor)>>evaluateSelection...etc...
		handlerActive: 	true
	Receiver's instance variables: 
		outerContext: 	TextMorphEditor(ParagraphEditor)>>evaluateSelection
		startpc: 	116
		numArgs: 	0


TextMorphEditor(ParagraphEditor)>>evaluateSelection
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		t1: 	nil
		t2: 	nil
		t3: 	nil
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 21 and rectangle 128@0 corner: 128@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'O'
		selectionShowing: 	false
		otherInterval: 	(20 to: 20)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2477)
		oldInterval: 	nil
		pivotBlock: 	nil


TextMorphEditor(ParagraphEditor)>>printIt
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		result: 	nil
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 21 and rectangle 128@0 corner: 128@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'O'
		selectionShowing: 	false
		otherInterval: 	(20 to: 20)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2477)
		oldInterval: 	nil
		pivotBlock: 	nil


[] in TextMorphEditor(ParagraphEditor)>>printIt:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 21 and rectangle 128@0 corner: 128@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'O'
		selectionShowing: 	false
		otherInterval: 	(20 to: 20)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2477)
		oldInterval: 	nil
		pivotBlock: 	nil


TextMorphEditor(ParagraphEditor)>>terminateAndInitializeAround:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		t1: 	[closure] in TextMorphEditor(ParagraphEditor)>>printIt:
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 21 and rectangle 128@0 corner: 128@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'O'
		selectionShowing: 	false
		otherInterval: 	(20 to: 20)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2477)
		oldInterval: 	nil
		pivotBlock: 	nil


TextMorphEditor(ParagraphEditor)>>printIt:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		t1: 	a WriteStream ''
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 21 and rectangle 128@0 corner: 128@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'O'
		selectionShowing: 	false
		otherInterval: 	(20 to: 20)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2477)
		oldInterval: 	nil
		pivotBlock: 	nil


TextMorphEditor(ParagraphEditor)>>dispatchOnKeyEvent:with:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
		typeAheadStream: 	a WriteStream ''
		honorCommandKeys: 	true
		keyValue: 	112
		keyChar: 	$p
		char: 	$p
		action: 	#printIt:
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 21 and rectangle 128@0 corner: 128@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'O'
		selectionShowing: 	false
		otherInterval: 	(20 to: 20)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2477)
		oldInterval: 	nil
		pivotBlock: 	nil


TextMorphEditor>>dispatchOnKeyEvent:with:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		t1: 	[keystroke '<Cmd-p>']
		t2: 	a WriteStream ''
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 21 and rectangle 128@0 corner: 128@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'O'
		selectionShowing: 	false
		otherInterval: 	(20 to: 20)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2477)
		oldInterval: 	nil
		pivotBlock: 	nil


TextMorphEditor(ParagraphEditor)>>keystroke:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		t1: 	[keystroke '<Cmd-p>']
		t2: 	a WriteStream ''
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 21 and rectangle 128@0 corner: 128@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'O'
		selectionShowing: 	false
		otherInterval: 	(20 to: 20)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2477)
		oldInterval: 	nil
		pivotBlock: 	nil


TextMorphEditor>>keystroke:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		t1: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		model: 	a Workspace
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 21 and rectangle 128@0 corner: 128@16
 ...etc...
		stopBlock: 	a CharacterBlock with index 1 and character $( and rectangle 0@0 cor...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 1)
		initialText: 	a Text for 'O'
		selectionShowing: 	false
		otherInterval: 	(20 to: 20)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2477)
		oldInterval: 	nil
		pivotBlock: 	nil


[] in [] in TextMorphForEditView(TextMorph)>>keyStroke:
	Receiver: a TextMorphForEditView(2477)
	Arguments and temporary variables: 
		t1: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(305)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1116) [other:  (blinkStart -> 278424)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Object new ) format'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3538)
		acceptOnCR: 	false


TextMorphForEditView(TextMorph)>>handleInteraction:
	Receiver: a TextMorphForEditView(2477)
	Arguments and temporary variables: 
		t1: 	[closure] in [] in TextMorphForEditView(TextMorph)>>keyStroke:
		t2: 	a TextMorphEditor
		t3: 	a MultiNewParagraph
		t4: 	a Text for '(Object new ) format'
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(305)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1116) [other:  (blinkStart -> 278424)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Object new ) format'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3538)
		acceptOnCR: 	false


TextMorphForEditView>>handleInteraction:
	Receiver: a TextMorphForEditView(2477)
	Arguments and temporary variables: 
		t1: 	[closure] in [] in TextMorphForEditView(TextMorph)>>keyStroke:
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(305)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1116) [other:  (blinkStart -> 278424)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Object new ) format'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3538)
		acceptOnCR: 	false


[] in TextMorphForEditView(TextMorph)>>keyStroke:
	Receiver: a TextMorphForEditView(2477)
	Arguments and temporary variables: 
		t1: 	[keystroke '<Cmd-p>']
		t2: 	nil
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(305)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1116) [other:  (blinkStart -> 278424)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Object new ) format'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3538)
		acceptOnCR: 	false


StandardToolSet class>>codeCompletionAround:textMorph:keyStroke:
	Receiver: StandardToolSet
	Arguments and temporary variables: 
		t1: 	[closure] in TextMorphForEditView(TextMorph)>>keyStroke:
		t2: 	a TextMorphForEditView(2477)
		t3: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	2
		instanceVariables: 	nil
		organization: 	('as yet unclassified')

		subclasses: 	nil
		name: 	#StandardToolSet
		classPool: 	nil
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'Tools-Base'
		traitComposition: 	nil
		localSelectors: 	nil


ToolSet class>>codeCompletionAround:textMorph:keyStroke:
	Receiver: ToolSet
	Arguments and temporary variables: 
		t1: 	[closure] in TextMorphForEditView(TextMorph)>>keyStroke:
		t2: 	a TextMorphForEditView(2477)
		t3: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		superclass: 	AppRegistry
		methodDict: 	a MethodDictionary()
		format: 	2
		instanceVariables: 	nil
		organization: 	('as yet unclassified')

		subclasses: 	nil
		name: 	#ToolSet
		classPool: 	nil
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'System-Applications'
		traitComposition: 	nil
		localSelectors: 	nil
		registeredClasses: 	an OrderedCollection(StandardToolSet)
		default: 	StandardToolSet


TextMorphForEditView(TextMorph)>>keyStroke:
	Receiver: a TextMorphForEditView(2477)
	Arguments and temporary variables: 
		t1: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(305)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1116) [other:  (blinkStart -> 278424)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Object new ) format'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3538)
		acceptOnCR: 	false


TextMorphForEditView>>keyStroke:
	Receiver: a TextMorphForEditView(2477)
	Arguments and temporary variables: 
		t1: 	[keystroke '<Cmd-p>']
		t2: 	a PluggableTextMorph(3538)
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(305)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1116) [other:  (blinkStart -> 278424)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Object new ) format'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3538)
		acceptOnCR: 	false


TextMorphForEditView(TextMorph)>>handleKeystroke:
	Receiver: a TextMorphForEditView(2477)
	Arguments and temporary variables: 
		t1: 	[keystroke '<Cmd-p>']
		t2: 	nil
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(305)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1116) [other:  (blinkStart -> 278424)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Object new ) format'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3538)
		acceptOnCR: 	false


KeyboardEvent>>sentTo:
	Receiver: [keystroke '<Cmd-p>']
	Arguments and temporary variables: 
		t1: 	a TextMorphForEditView(2477)
	Receiver's instance variables: 
		timeStamp: 	277920
		source: 	a HandMorph(3216)
		windowIndex: 	nil
		type: 	#keystroke
		buttons: 	64
		position: 	171@93
		handler: 	nil
		wasHandled: 	true
		keyValue: 	112
		charCode: 	112
		scanCode: 	35


TextMorphForEditView(Morph)>>handleEvent:
	Receiver: a TextMorphForEditView(2477)
	Arguments and temporary variables: 
		t1: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(305)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1116) [other:  (blinkStart -> 278424)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Object new ) format'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3538)
		acceptOnCR: 	false


TextMorphForEditView(Morph)>>handleFocusEvent:
	Receiver: a TextMorphForEditView(2477)
	Arguments and temporary variables: 
		t1: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 429@18
		owner: 	a TransformMorph(305)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 429@18
		color: 	Color black
		extension: 	a MorphExtension (1116) [other:  (blinkStart -> 278424)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for '(Object new ) format'
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(3538)
		acceptOnCR: 	false


[] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		t1: 	[keystroke '<Cmd-p>']
		t2: 	a TextMorphForEditView(2477)
		t5: 	#(nil)
	Receiver's instance variables: 
		bounds: 	693@588 corner: 709@604
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	693@588 corner: 709@604
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1375)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[693@588 mouseUp 268299 nil]
		targetOffset: 	175@94
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 268299 693 588 0 0 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


[] in PasteUpMorph>>becomeActiveDuring:
	Receiver: a PasteUpMorph(1622) [world]
	Arguments and temporary variables: 
		t1: 	[closure] in HandMorph>>sendFocusEvent:to:clear:
	Receiver's instance variables: 
		bounds: 	0@0 corner: 1624@998
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(3095) a PreDebugWindow(511) a SystemWindow(1...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.97 g: 0.98 b: 1.0)
		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.03 g: 0.02 b: 0.0)
		model: 	a MorphicModel(1926)
		cursor: 	1
		padding: 	3
		backgroundMorph: 	nil
		isPartsBin: 	nil
		autoLineLayout: 	false
		indicateCursor: 	nil
		resizeToFit: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


BlockClosure>>on:do:
	Receiver: [closure] in PasteUpMorph>>becomeActiveDuring:
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[closure] in PasteUpMorph>>becomeActiveDuring:
		handlerActive: 	false
	Receiver's instance variables: 
		outerContext: 	PasteUpMorph>>becomeActiveDuring:
		startpc: 	67
		numArgs: 	0


PasteUpMorph>>becomeActiveDuring:
	Receiver: a PasteUpMorph(1622) [world]
	Arguments and temporary variables: 
		t1: 	[closure] in HandMorph>>sendFocusEvent:to:clear:
		t2: 	a PasteUpMorph(1622) [world]
		t3: 	a HandMorph(3216)
		t4: 	nil
	Receiver's instance variables: 
		bounds: 	0@0 corner: 1624@998
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(3095) a PreDebugWindow(511) a SystemWindow(1...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.97 g: 0.98 b: 1.0)
		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.03 g: 0.02 b: 0.0)
		model: 	a MorphicModel(1926)
		cursor: 	1
		padding: 	3
		backgroundMorph: 	nil
		isPartsBin: 	nil
		autoLineLayout: 	false
		indicateCursor: 	nil
		resizeToFit: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		t1: 	[keystroke '<Cmd-p>']
		t2: 	a TextMorphForEditView(2477)
		t3: 	[closure] in HandMorph>>sendKeyboardEvent:
		t4: 	a PasteUpMorph(1622) [world]
		t5: 	#(nil)
	Receiver's instance variables: 
		bounds: 	693@588 corner: 709@604
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	693@588 corner: 709@604
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1375)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[693@588 mouseUp 268299 nil]
		targetOffset: 	175@94
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 268299 693 588 0 0 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		t1: 	[keystroke '<Cmd-p>']
		t2: 	a TextMorphForEditView(2477)
		t3: 	[closure] in HandMorph>>sendKeyboardEvent:
		t4: 	nil
	Receiver's instance variables: 
		bounds: 	693@588 corner: 709@604
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	693@588 corner: 709@604
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1375)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[693@588 mouseUp 268299 nil]
		targetOffset: 	175@94
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 268299 693 588 0 0 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>sendKeyboardEvent:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	693@588 corner: 709@604
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	693@588 corner: 709@604
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1375)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[693@588 mouseUp 268299 nil]
		targetOffset: 	175@94
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 268299 693 588 0 0 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>handleEvent:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		t1: 	[keystroke '<Cmd-p>']
		t2: 	[keystroke '<Cmd-p>']
		t3: 	nil
	Receiver's instance variables: 
		bounds: 	693@588 corner: 709@604
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	693@588 corner: 709@604
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1375)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[693@588 mouseUp 268299 nil]
		targetOffset: 	175@94
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 268299 693 588 0 0 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>processEvents
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		t1: 	[keystroke '<Cmd-p>']
		t2: 	#(2 277920 112 0 8 112 0 1)
		t3: 	2
		t4: 	true
	Receiver's instance variables: 
		bounds: 	693@588 corner: 709@604
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	693@588 corner: 709@604
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1375)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[693@588 mouseUp 268299 nil]
		targetOffset: 	175@94
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 268299 693 588 0 0 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


[] in WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		t2: 	a HandMorph(3216)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1624@998
		canvas: 	a FormCanvas on: DisplayScreen(1624x998x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> an OverflowRowMorph(1596))(an Overflow...etc...
		lastStepTime: 	277902
		lastStepMessage: 	nil
		lastCycleTime: 	277943
		commandHistory: 	a CommandHistory
		alarms: 	a Heap()
		lastAlarmTime: 	277902
		menuBuilder: 	a PragmaMenuBuilder


Array(SequenceableCollection)>>do:
	Receiver: an Array(a HandMorph(3216))
	Arguments and temporary variables: 
		t1: 	[closure] in WorldState>>doOneCycleNowFor:
		t2: 	1
		t2LimiT: 	1
	Receiver's instance variables: 
an Array(a HandMorph(3216))

WorldState>>handsDo:
	Receiver: a WorldState
	Arguments and temporary variables: 
		t1: 	[closure] in WorldState>>doOneCycleNowFor:
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1624@998
		canvas: 	a FormCanvas on: DisplayScreen(1624x998x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> an OverflowRowMorph(1596))(an Overflow...etc...
		lastStepTime: 	277902
		lastStepMessage: 	nil
		lastCycleTime: 	277943
		commandHistory: 	a CommandHistory
		alarms: 	a Heap()
		lastAlarmTime: 	277902
		menuBuilder: 	a PragmaMenuBuilder


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		t1: 	a PasteUpMorph(1622) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1624@998
		canvas: 	a FormCanvas on: DisplayScreen(1624x998x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> an OverflowRowMorph(1596))(an Overflow...etc...
		lastStepTime: 	277902
		lastStepMessage: 	nil
		lastCycleTime: 	277943
		commandHistory: 	a CommandHistory
		alarms: 	a Heap()
		lastAlarmTime: 	277902
		menuBuilder: 	a PragmaMenuBuilder



--- The full stack ---
Object>>doesNotUnderstand: #format
UndefinedObject>>DoIt
Compiler>>evaluate:in:to:notifying:ifFail:logged:
[] in TextMorphEditor(ParagraphEditor)>>evaluateSelection
BlockClosure>>on:do:
TextMorphEditor(ParagraphEditor)>>evaluateSelection
TextMorphEditor(ParagraphEditor)>>printIt
[] in TextMorphEditor(ParagraphEditor)>>printIt:
TextMorphEditor(ParagraphEditor)>>terminateAndInitializeAround:
TextMorphEditor(ParagraphEditor)>>printIt:
TextMorphEditor(ParagraphEditor)>>dispatchOnKeyEvent:with:
TextMorphEditor>>dispatchOnKeyEvent:with:
TextMorphEditor(ParagraphEditor)>>keystroke:
TextMorphEditor>>keystroke:
[] in [] in TextMorphForEditView(TextMorph)>>keyStroke:
TextMorphForEditView(TextMorph)>>handleInteraction:
TextMorphForEditView>>handleInteraction:
[] in TextMorphForEditView(TextMorph)>>keyStroke:
StandardToolSet class>>codeCompletionAround:textMorph:keyStroke:
ToolSet class>>codeCompletionAround:textMorph:keyStroke:
TextMorphForEditView(TextMorph)>>keyStroke:
TextMorphForEditView>>keyStroke:
TextMorphForEditView(TextMorph)>>handleKeystroke:
KeyboardEvent>>sentTo:
TextMorphForEditView(Morph)>>handleEvent:
TextMorphForEditView(Morph)>>handleFocusEvent:
[] in HandMorph>>sendFocusEvent:to:clear:
[] in PasteUpMorph>>becomeActiveDuring:
BlockClosure>>on:do:
PasteUpMorph>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendKeyboardEvent:
HandMorph>>handleEvent:
HandMorph>>processEvents
[] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WorldState>>doOneCycleFor:
PasteUpMorph>>doOneCycle
[] in Project class>>spawnNewProcess
[] in BlockClosure>>newProcess
------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: StandardFileMenu class>>newFileMenu:withPattern:
29 March 2011 5:11:14 pm

VM: Mac OS - intel - 1067 - Squeak4.1 of 17 April 2010 [latest update: #9957] 21.0
Image: PharoCore1.1ALPHA [Latest update: #11239]

SecurityManager state:
Restricted: false
FileAccess: true
SocketAccess: true
Working Dir /Users/arnaudj/Desktop/GIT/Handle/VM
Trusted Dir /foobar/tooBar/forSqueak/bogus/
Untrusted Dir /Users/arnaudj/Library/Preferences/Squeak/Internet/My Squeak/

StandardFileMenu class(Object)>>doesNotUnderstand: #newFileMenu:withPattern:
	Receiver: StandardFileMenu
	Arguments and temporary variables: 
		aMessage: 	newFileMenu: UnixFileDirectory on '/Users/arnaudj/Desktop/GIT/Handle/...etc...
		exception: 	MessageNotUnderstood: StandardFileMenu class>>newFileMenu:withPatter...etc...
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	SelectionMenu
		methodDict: 	a MethodDictionary(#advance:containingDirectoriesFrom:->(StandardFi...etc...
		format: 	150
		instanceVariables: 	#('canTypeFileName' 'pattern')
		organization: 	('basic control sequences' confirmExistingFiles: getTypedFileName...etc...
		subclasses: 	nil
		name: 	#StandardFileMenu
		classPool: 	nil
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'Morphic-FileList'
		traitComposition: 	nil
		localSelectors: 	nil


VMMakerTool>>saveConfig
	Receiver: a VMMakerTool
	Arguments and temporary variables: 
		fileResult: 	nil
		file: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(599) a PluggableTextMorph(3382) a ...etc...
		vmMaker: 	a MacOSPowerPCOS9VMMaker
		allPluginsList: 	a PluggableListMorph(2419)
		allPluginsSelection: 	nil
		allPluginsSelectionsArray: 	#(false false false false false false false false fa...etc...
		internalPluginsList: 	a PluggableListMorph(1214)
		internalPluginsSelection: 	38
		internalPluginsSelectionsArray: 	#()
		externalPluginsList: 	a PluggableListMorph(2592)
		externalPluginsSelection: 	nil
		externalPluginsSelectionsArray: 	#()
		logger: 	a TranscriptStream '
'
		interpreterClassMorph: 	a PluggableTextMorph(3382)
		platformPathMorph: 	a PluggableTextMorph(3685)
		platformNameMorph: 	a PluggableTextMorph(1412)
		generatedPathMorph: 	a PluggableTextMorph(967)


[] in SimpleButtonMorph>>doButtonAction
	Receiver: a SimpleButtonMorph(1888)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	858@177 corner: 1030@197
		owner: 	an AlignmentMorph(1144)
		submorphs: 	an Array(a StringMorph(347)'Save')
		fullBounds: 	858@177 corner: 1030@197
		color: 	(Color r: 0.4 g: 0.8 b: 0.6)
		extension: 	a MorphExtension (498) [balloonText] 
		borderWidth: 	1
		borderColor: 	Color gray
		target: 	a VMMakerTool
		actionSelector: 	#saveConfig
		arguments: 	#()
		actWhen: 	#buttonUp
		oldColor: 	nil
		mouseDownTime: 	2728
		label: 	a StringMorph(347)'Save'


BlockClosure>>ensure:
	Receiver: [closure] in SimpleButtonMorph>>doButtonAction
	Arguments and temporary variables: 
		aBlock: 	[closure] in CursorWithMask(Cursor)>>showWhile:
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	SimpleButtonMorph>>doButtonAction
		startpc: 	56
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: 16@16
	depth: 1
	fromArray: #(
		2r0
		2r10000000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[closure] in SimpleButtonMorph>>doButtonAction
		oldcursor: 	((CursorWithMask
	extent: 16@16
	depth: 1
	fromArray: #(
		2r0
		2r1...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	-1@-1
		maskForm: 	Form(16x16x1)


SimpleButtonMorph>>doButtonAction
	Receiver: a SimpleButtonMorph(1888)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	858@177 corner: 1030@197
		owner: 	an AlignmentMorph(1144)
		submorphs: 	an Array(a StringMorph(347)'Save')
		fullBounds: 	858@177 corner: 1030@197
		color: 	(Color r: 0.4 g: 0.8 b: 0.6)
		extension: 	a MorphExtension (498) [balloonText] 
		borderWidth: 	1
		borderColor: 	Color gray
		target: 	a VMMakerTool
		actionSelector: 	#saveConfig
		arguments: 	#()
		actWhen: 	#buttonUp
		oldColor: 	nil
		mouseDownTime: 	2728
		label: 	a StringMorph(347)'Save'


SimpleButtonMorph>>mouseUp:
	Receiver: a SimpleButtonMorph(1888)
	Arguments and temporary variables: 
		evt: 	[934@189 mouseUp 2816 nil]
	Receiver's instance variables: 
		bounds: 	858@177 corner: 1030@197
		owner: 	an AlignmentMorph(1144)
		submorphs: 	an Array(a StringMorph(347)'Save')
		fullBounds: 	858@177 corner: 1030@197
		color: 	(Color r: 0.4 g: 0.8 b: 0.6)
		extension: 	a MorphExtension (498) [balloonText] 
		borderWidth: 	1
		borderColor: 	Color gray
		target: 	a VMMakerTool
		actionSelector: 	#saveConfig
		arguments: 	#()
		actWhen: 	#buttonUp
		oldColor: 	nil
		mouseDownTime: 	2728
		label: 	a StringMorph(347)'Save'


SimpleButtonMorph(Morph)>>handleMouseUp:
	Receiver: a SimpleButtonMorph(1888)
	Arguments and temporary variables: 
		anEvent: 	[934@189 mouseUp 2816 nil]
	Receiver's instance variables: 
		bounds: 	858@177 corner: 1030@197
		owner: 	an AlignmentMorph(1144)
		submorphs: 	an Array(a StringMorph(347)'Save')
		fullBounds: 	858@177 corner: 1030@197
		color: 	(Color r: 0.4 g: 0.8 b: 0.6)
		extension: 	a MorphExtension (498) [balloonText] 
		borderWidth: 	1
		borderColor: 	Color gray
		target: 	a VMMakerTool
		actionSelector: 	#saveConfig
		arguments: 	#()
		actWhen: 	#buttonUp
		oldColor: 	nil
		mouseDownTime: 	2728
		label: 	a StringMorph(347)'Save'


MouseButtonEvent>>sentTo:
	Receiver: [934@189 mouseUp 2816 nil]
	Arguments and temporary variables: 
		anObject: 	a SimpleButtonMorph(1888)
	Receiver's instance variables: 
		timeStamp: 	2816
		source: 	a HandMorph(3216)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	934@189
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


SimpleButtonMorph(Morph)>>handleEvent:
	Receiver: a SimpleButtonMorph(1888)
	Arguments and temporary variables: 
		anEvent: 	[934@189 mouseUp 2816 nil]
	Receiver's instance variables: 
		bounds: 	858@177 corner: 1030@197
		owner: 	an AlignmentMorph(1144)
		submorphs: 	an Array(a StringMorph(347)'Save')
		fullBounds: 	858@177 corner: 1030@197
		color: 	(Color r: 0.4 g: 0.8 b: 0.6)
		extension: 	a MorphExtension (498) [balloonText] 
		borderWidth: 	1
		borderColor: 	Color gray
		target: 	a VMMakerTool
		actionSelector: 	#saveConfig
		arguments: 	#()
		actWhen: 	#buttonUp
		oldColor: 	nil
		mouseDownTime: 	2728
		label: 	a StringMorph(347)'Save'


SimpleButtonMorph(Morph)>>handleFocusEvent:
	Receiver: a SimpleButtonMorph(1888)
	Arguments and temporary variables: 
		anEvent: 	[934@189 mouseUp 2816 nil]
	Receiver's instance variables: 
		bounds: 	858@177 corner: 1030@197
		owner: 	an AlignmentMorph(1144)
		submorphs: 	an Array(a StringMorph(347)'Save')
		fullBounds: 	858@177 corner: 1030@197
		color: 	(Color r: 0.4 g: 0.8 b: 0.6)
		extension: 	a MorphExtension (498) [balloonText] 
		borderWidth: 	1
		borderColor: 	Color gray
		target: 	a VMMakerTool
		actionSelector: 	#saveConfig
		arguments: 	#()
		actWhen: 	#buttonUp
		oldColor: 	nil
		mouseDownTime: 	2728
		label: 	a StringMorph(347)'Save'


[] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[934@189 mouseUp 2816 nil]
		focusHolder: 	a SimpleButtonMorph(1888)
		result: 	#(nil)
	Receiver's instance variables: 
		bounds: 	934@189 corner: 950@205
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	934@189 corner: 950@205
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(541)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[934@189 mouseUp 2816 nil]
		targetOffset: 	76@12
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 2816 934 189 0 0 0 1)
		lastKeyScanCode: 	15
		combinedChar: 	nil


[] in PasteUpMorph>>becomeActiveDuring:
	Receiver: a PasteUpMorph(1622) [world]
	Arguments and temporary variables: 
		aBlock: 	[closure] in HandMorph>>sendFocusEvent:to:clear:
	Receiver's instance variables: 
		bounds: 	0@0 corner: 1232@750
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(3095) a PreDebugWindow(115) a SystemWindow(5...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.97 g: 0.98 b: 1.0)
		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.03 g: 0.02 b: 0.0)
		model: 	a MorphicModel(1926)
		cursor: 	1
		padding: 	3
		backgroundMorph: 	nil
		isPartsBin: 	nil
		autoLineLayout: 	false
		indicateCursor: 	nil
		resizeToFit: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


BlockClosure>>on:do:
	Receiver: [closure] in PasteUpMorph>>becomeActiveDuring:
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[closure] in PasteUpMorph>>becomeActiveDuring:
		handlerActive: 	false
	Receiver's instance variables: 
		outerContext: 	PasteUpMorph>>becomeActiveDuring:
		startpc: 	67
		numArgs: 	0


PasteUpMorph>>becomeActiveDuring:
	Receiver: a PasteUpMorph(1622) [world]
	Arguments and temporary variables: 
		aBlock: 	[closure] in HandMorph>>sendFocusEvent:to:clear:
		priorWorld: 	a PasteUpMorph(1622) [world]
		priorHand: 	a HandMorph(3216)
		priorEvent: 	[934@189 mouseOver red nil nil]
	Receiver's instance variables: 
		bounds: 	0@0 corner: 1232@750
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(3095) a PreDebugWindow(115) a SystemWindow(5...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.97 g: 0.98 b: 1.0)
		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.03 g: 0.02 b: 0.0)
		model: 	a MorphicModel(1926)
		cursor: 	1
		padding: 	3
		backgroundMorph: 	nil
		isPartsBin: 	nil
		autoLineLayout: 	false
		indicateCursor: 	nil
		resizeToFit: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[934@189 mouseUp 2816 nil]
		focusHolder: 	a SimpleButtonMorph(1888)
		aBlock: 	[closure] in HandMorph>>sendMouseEvent:
		w: 	a PasteUpMorph(1622) [world]
		result: 	#(nil)
	Receiver's instance variables: 
		bounds: 	934@189 corner: 950@205
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	934@189 corner: 950@205
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(541)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[934@189 mouseUp 2816 nil]
		targetOffset: 	76@12
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 2816 934 189 0 0 0 1)
		lastKeyScanCode: 	15
		combinedChar: 	nil


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[934@189 mouseUp 2816 nil]
		focusHolder: 	a SimpleButtonMorph(1888)
		aBlock: 	[closure] in HandMorph>>sendMouseEvent:
		result: 	nil
	Receiver's instance variables: 
		bounds: 	934@189 corner: 950@205
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	934@189 corner: 950@205
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(541)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[934@189 mouseUp 2816 nil]
		targetOffset: 	76@12
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 2816 934 189 0 0 0 1)
		lastKeyScanCode: 	15
		combinedChar: 	nil


HandMorph>>sendMouseEvent:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[934@189 mouseUp 2816 nil]
	Receiver's instance variables: 
		bounds: 	934@189 corner: 950@205
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	934@189 corner: 950@205
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(541)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[934@189 mouseUp 2816 nil]
		targetOffset: 	76@12
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 2816 934 189 0 0 0 1)
		lastKeyScanCode: 	15
		combinedChar: 	nil


HandMorph>>handleEvent:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[934@189 mouseUp 2816 nil]
		evt: 	[934@189 mouseUp 2816 nil]
		ofs: 	nil
	Receiver's instance variables: 
		bounds: 	934@189 corner: 950@205
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	934@189 corner: 950@205
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(541)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[934@189 mouseUp 2816 nil]
		targetOffset: 	76@12
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 2816 934 189 0 0 0 1)
		lastKeyScanCode: 	15
		combinedChar: 	nil


HandMorph>>processEvents
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		evt: 	[934@189 mouseUp 2816 nil]
		evtBuf: 	#(1 2816 934 189 0 0 0 1)
		type: 	1
		hadAny: 	false
	Receiver's instance variables: 
		bounds: 	934@189 corner: 950@205
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	934@189 corner: 950@205
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(541)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[934@189 mouseUp 2816 nil]
		targetOffset: 	76@12
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 2816 934 189 0 0 0 1)
		lastKeyScanCode: 	15
		combinedChar: 	nil


[] in WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		h: 	a HandMorph(3216)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1232@750
		canvas: 	a FormCanvas on: DisplayScreen(1232x750x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> an OverflowRowMorph(3559))(an Overflow...etc...
		lastStepTime: 	2808
		lastStepMessage: 	nil
		lastCycleTime: 	2848
		commandHistory: 	a CommandHistory
		alarms: 	a Heap()
		lastAlarmTime: 	2808
		menuBuilder: 	a PragmaMenuBuilder


Array(SequenceableCollection)>>do:
	Receiver: an Array(a HandMorph(3216))
	Arguments and temporary variables: 
		aBlock: 	[closure] in WorldState>>doOneCycleNowFor:
		index: 	1
		indexLimiT: 	1
	Receiver's instance variables: 
an Array(a HandMorph(3216))

WorldState>>handsDo:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aBlock: 	[closure] in WorldState>>doOneCycleNowFor:
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1232@750
		canvas: 	a FormCanvas on: DisplayScreen(1232x750x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> an OverflowRowMorph(3559))(an Overflow...etc...
		lastStepTime: 	2808
		lastStepMessage: 	nil
		lastCycleTime: 	2848
		commandHistory: 	a CommandHistory
		alarms: 	a Heap()
		lastAlarmTime: 	2808
		menuBuilder: 	a PragmaMenuBuilder


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a PasteUpMorph(1622) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1232@750
		canvas: 	a FormCanvas on: DisplayScreen(1232x750x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> an OverflowRowMorph(3559))(an Overflow...etc...
		lastStepTime: 	2808
		lastStepMessage: 	nil
		lastCycleTime: 	2848
		commandHistory: 	a CommandHistory
		alarms: 	a Heap()
		lastAlarmTime: 	2808
		menuBuilder: 	a PragmaMenuBuilder


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a PasteUpMorph(1622) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1232@750
		canvas: 	a FormCanvas on: DisplayScreen(1232x750x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> an OverflowRowMorph(3559))(an Overflow...etc...
		lastStepTime: 	2808
		lastStepMessage: 	nil
		lastCycleTime: 	2848
		commandHistory: 	a CommandHistory
		alarms: 	a Heap()
		lastAlarmTime: 	2808
		menuBuilder: 	a PragmaMenuBuilder


PasteUpMorph>>doOneCycle
	Receiver: a PasteUpMorph(1622) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	0@0 corner: 1232@750
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(3095) a PreDebugWindow(115) a SystemWindow(5...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.97 g: 0.98 b: 1.0)
		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.03 g: 0.02 b: 0.0)
		model: 	a MorphicModel(1926)
		cursor: 	1
		padding: 	3
		backgroundMorph: 	nil
		isPartsBin: 	nil
		autoLineLayout: 	false
		indicateCursor: 	nil
		resizeToFit: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


[] in Project class>>spawnNewProcess
	Receiver: Project
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#beep->(Project>>#beep "a CompiledMethod(1287)")...etc...
		format: 	168
		instanceVariables: 	#('world' 'changeSet' 'transcript' 'parentProject' 'previous...etc...
		organization: 	('*Polymorph-Widgets' createTaskbarIfNecessary moveCollapsedWindo...etc...
		subclasses: 	nil
		name: 	#Project
		classPool: 	a Dictionary(#AllProjects->an OrderedCollection(a Project) #CurrentP...etc...
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'System-Support'
		traitComposition: 	{}
		localSelectors: 	nil


[] in BlockClosure>>newProcess
	Receiver: [closure] in Project class>>spawnNewProcess
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	Project class>>spawnNewProcess
		startpc: 	53
		numArgs: 	0



--- The full stack ---
StandardFileMenu class(Object)>>doesNotUnderstand: #newFileMenu:withPattern:
VMMakerTool>>saveConfig
[] in SimpleButtonMorph>>doButtonAction
BlockClosure>>ensure:
CursorWithMask(Cursor)>>showWhile:
SimpleButtonMorph>>doButtonAction
SimpleButtonMorph>>mouseUp:
SimpleButtonMorph(Morph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
SimpleButtonMorph(Morph)>>handleEvent:
SimpleButtonMorph(Morph)>>handleFocusEvent:
[] in HandMorph>>sendFocusEvent:to:clear:
[] in PasteUpMorph>>becomeActiveDuring:
BlockClosure>>on:do:
PasteUpMorph>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEvents
[] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
PasteUpMorph>>doOneCycle
[] in Project class>>spawnNewProcess
[] in BlockClosure>>newProcess
------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: StandardFileMenu class>>newFileMenu:withPattern:
29 March 2011 5:11:37 pm

VM: Mac OS - intel - 1067 - Squeak4.1 of 17 April 2010 [latest update: #9957] 21.0
Image: PharoCore1.1ALPHA [Latest update: #11239]

SecurityManager state:
Restricted: false
FileAccess: true
SocketAccess: true
Working Dir /Users/arnaudj/Desktop/GIT/Handle/VM
Trusted Dir /foobar/tooBar/forSqueak/bogus/
Untrusted Dir /Users/arnaudj/Library/Preferences/Squeak/Internet/My Squeak/

StandardFileMenu class(Object)>>doesNotUnderstand: #newFileMenu:withPattern:
	Receiver: StandardFileMenu
	Arguments and temporary variables: 
		aMessage: 	newFileMenu: a PSUIManager withPattern: '*.config'
		exception: 	MessageNotUnderstood: StandardFileMenu class>>newFileMenu:withPatter...etc...
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	SelectionMenu
		methodDict: 	a MethodDictionary(#advance:containingDirectoriesFrom:->(StandardFi...etc...
		format: 	150
		instanceVariables: 	#('canTypeFileName' 'pattern')
		organization: 	('basic control sequences' confirmExistingFiles: getTypedFileName...etc...
		subclasses: 	nil
		name: 	#StandardFileMenu
		classPool: 	nil
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'Morphic-FileList'
		traitComposition: 	nil
		localSelectors: 	nil


VMMakerTool>>DoItIn:
	Receiver: a VMMakerTool
	Arguments and temporary variables: 
		ThisContext: 	VMMakerTool>>saveConfig
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(599) a PluggableTextMorph(3382) a ...etc...
		vmMaker: 	a MacOSPowerPCOS9VMMaker
		allPluginsList: 	a PluggableListMorph(2419)
		allPluginsSelection: 	nil
		allPluginsSelectionsArray: 	#(false false false false false false false false fa...etc...
		internalPluginsList: 	a PluggableListMorph(1214)
		internalPluginsSelection: 	38
		internalPluginsSelectionsArray: 	#()
		externalPluginsList: 	a PluggableListMorph(2592)
		externalPluginsSelection: 	nil
		externalPluginsSelectionsArray: 	#()
		logger: 	a TranscriptStream '
'
		interpreterClassMorph: 	a PluggableTextMorph(3382)
		platformPathMorph: 	a PluggableTextMorph(3685)
		platformNameMorph: 	a PluggableTextMorph(1412)
		generatedPathMorph: 	a PluggableTextMorph(967)


Compiler>>evaluate:in:to:notifying:ifFail:logged:
	Receiver: a Compiler
	Arguments and temporary variables: 
		textOrStream: 	a ReadWriteStream 'saveConfig

	"write info about the current con...etc...
		aContext: 	VMMakerTool>>saveConfig
		receiver: 	a VMMakerTool
		aRequestor: 	a TextMorphEditor
		failBlock: 	[closure] in [] in TextMorphEditor(ParagraphEditor)>>evaluateSelecti...etc...
		logFlag: 	true
		methodNode: 	DoItIn: ThisContext 
	^ ThisContext
		namedTempAt: 1
		put: (Standa...etc...
		method: 	(VMMakerTool>>#DoItIn: "a CompiledMethod(1055)")
		value: 	nil
		toLog: 	nil
		itsSelection: 	nil
		itsSelectionString: 	nil
	Receiver's instance variables: 
		sourceStream: 	a ReadWriteStream 'saveConfig

	"write info about the current con...etc...
		requestor: 	a TextMorphEditor
		class: 	VMMakerTool
		category: 	nil
		context: 	VMMakerTool>>saveConfig
		parser: 	a Parser


[] in TextMorphEditor(ParagraphEditor)>>evaluateSelection
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		rcvr: 	a VMMakerTool
		ctxt: 	VMMakerTool>>saveConfig
	Receiver's instance variables: 
		model: 	a Debugger
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 179 and character Character cr and rect...etc...
		stopBlock: 	a CharacterBlock with index 91 and character Character tab and recta...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 2)
		initialText: 	a Text for 'saveConfig

	"write info about the current configurati...etc...
		selectionShowing: 	false
		otherInterval: 	(137 to: 145)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2640)
		oldInterval: 	(142 to: 141)
		pivotBlock: 	a CharacterBlock with index 142 and character $a and rectangle 326@...etc...


BlockClosure>>on:do:
	Receiver: [closure] in TextMorphEditor(ParagraphEditor)>>evaluateSelection
	Arguments and temporary variables: 
		exception: 	OutOfScopeNotification
		handlerAction: 	[closure] in TextMorphEditor(ParagraphEditor)>>evaluateSelection...etc...
		handlerActive: 	true
	Receiver's instance variables: 
		outerContext: 	TextMorphEditor(ParagraphEditor)>>evaluateSelection
		startpc: 	116
		numArgs: 	0


TextMorphEditor(ParagraphEditor)>>evaluateSelection
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		result: 	nil
		rcvr: 	a VMMakerTool
		ctxt: 	VMMakerTool>>saveConfig
	Receiver's instance variables: 
		model: 	a Debugger
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 179 and character Character cr and rect...etc...
		stopBlock: 	a CharacterBlock with index 91 and character Character tab and recta...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 2)
		initialText: 	a Text for 'saveConfig

	"write info about the current configurati...etc...
		selectionShowing: 	false
		otherInterval: 	(137 to: 145)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2640)
		oldInterval: 	(142 to: 141)
		pivotBlock: 	a CharacterBlock with index 142 and character $a and rectangle 326@...etc...


TextMorphEditor(ParagraphEditor)>>printIt
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		result: 	nil
	Receiver's instance variables: 
		model: 	a Debugger
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 179 and character Character cr and rect...etc...
		stopBlock: 	a CharacterBlock with index 91 and character Character tab and recta...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 2)
		initialText: 	a Text for 'saveConfig

	"write info about the current configurati...etc...
		selectionShowing: 	false
		otherInterval: 	(137 to: 145)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2640)
		oldInterval: 	(142 to: 141)
		pivotBlock: 	a CharacterBlock with index 142 and character $a and rectangle 326@...etc...


[] in TextMorphEditor(ParagraphEditor)>>printIt:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		model: 	a Debugger
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 179 and character Character cr and rect...etc...
		stopBlock: 	a CharacterBlock with index 91 and character Character tab and recta...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 2)
		initialText: 	a Text for 'saveConfig

	"write info about the current configurati...etc...
		selectionShowing: 	false
		otherInterval: 	(137 to: 145)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2640)
		oldInterval: 	(142 to: 141)
		pivotBlock: 	a CharacterBlock with index 142 and character $a and rectangle 326@...etc...


TextMorphEditor(ParagraphEditor)>>terminateAndInitializeAround:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		aBlock: 	[closure] in TextMorphEditor(ParagraphEditor)>>printIt:
	Receiver's instance variables: 
		model: 	a Debugger
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 179 and character Character cr and rect...etc...
		stopBlock: 	a CharacterBlock with index 91 and character Character tab and recta...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 2)
		initialText: 	a Text for 'saveConfig

	"write info about the current configurati...etc...
		selectionShowing: 	false
		otherInterval: 	(137 to: 145)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2640)
		oldInterval: 	(142 to: 141)
		pivotBlock: 	a CharacterBlock with index 142 and character $a and rectangle 326@...etc...


TextMorphEditor(ParagraphEditor)>>printIt:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		characterStream: 	a WriteStream ''
	Receiver's instance variables: 
		model: 	a Debugger
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 179 and character Character cr and rect...etc...
		stopBlock: 	a CharacterBlock with index 91 and character Character tab and recta...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 2)
		initialText: 	a Text for 'saveConfig

	"write info about the current configurati...etc...
		selectionShowing: 	false
		otherInterval: 	(137 to: 145)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2640)
		oldInterval: 	(142 to: 141)
		pivotBlock: 	a CharacterBlock with index 142 and character $a and rectangle 326@...etc...


TextMorphEditor(ParagraphEditor)>>dispatchOnKeyEvent:with:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
		typeAheadStream: 	a WriteStream ''
		honorCommandKeys: 	true
		keyValue: 	112
		keyChar: 	$p
		char: 	$p
		action: 	#printIt:
	Receiver's instance variables: 
		model: 	a Debugger
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 179 and character Character cr and rect...etc...
		stopBlock: 	a CharacterBlock with index 91 and character Character tab and recta...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 2)
		initialText: 	a Text for 'saveConfig

	"write info about the current configurati...etc...
		selectionShowing: 	false
		otherInterval: 	(137 to: 145)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2640)
		oldInterval: 	(142 to: 141)
		pivotBlock: 	a CharacterBlock with index 142 and character $a and rectangle 326@...etc...


TextMorphEditor>>dispatchOnKeyEvent:with:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
		typeAheadStream: 	a WriteStream ''
	Receiver's instance variables: 
		model: 	a Debugger
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 179 and character Character cr and rect...etc...
		stopBlock: 	a CharacterBlock with index 91 and character Character tab and recta...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 2)
		initialText: 	a Text for 'saveConfig

	"write info about the current configurati...etc...
		selectionShowing: 	false
		otherInterval: 	(137 to: 145)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2640)
		oldInterval: 	(142 to: 141)
		pivotBlock: 	a CharacterBlock with index 142 and character $a and rectangle 326@...etc...


TextMorphEditor(ParagraphEditor)>>keystroke:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
		typeAhead: 	a WriteStream ''
	Receiver's instance variables: 
		model: 	a Debugger
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 179 and character Character cr and rect...etc...
		stopBlock: 	a CharacterBlock with index 91 and character Character tab and recta...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 2)
		initialText: 	a Text for 'saveConfig

	"write info about the current configurati...etc...
		selectionShowing: 	false
		otherInterval: 	(137 to: 145)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2640)
		oldInterval: 	(142 to: 141)
		pivotBlock: 	a CharacterBlock with index 142 and character $a and rectangle 326@...etc...


TextMorphEditor>>keystroke:
	Receiver: a TextMorphEditor
	Arguments and temporary variables: 
		keyEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		model: 	a Debugger
		paragraph: 	a MultiNewParagraph
		startBlock: 	a CharacterBlock with index 179 and character Character cr and rect...etc...
		stopBlock: 	a CharacterBlock with index 91 and character Character tab and recta...etc...
		beginTypeInBlock: 	nil
		emphasisHere: 	an Array(a TextFontChange font: 2)
		initialText: 	a Text for 'saveConfig

	"write info about the current configurati...etc...
		selectionShowing: 	false
		otherInterval: 	(137 to: 145)
		lastParentLocation: 	nil
		morph: 	a TextMorphForEditView(2640)
		oldInterval: 	(142 to: 141)
		pivotBlock: 	a CharacterBlock with index 142 and character $a and rectangle 326@...etc...


[] in [] in TextMorphForEditView(TextMorph)>>keyStroke:
	Receiver: a TextMorphForEditView(2640)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 682@194
		owner: 	a TransformMorph(4023)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 682@194
		color: 	Color black
		extension: 	a MorphExtension (1227) [other:  (blinkStart -> 25666)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for 'saveConfig

	"write info about the current configuration to a...etc...
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(1192)
		acceptOnCR: 	false


TextMorphForEditView(TextMorph)>>handleInteraction:
	Receiver: a TextMorphForEditView(2640)
	Arguments and temporary variables: 
		interactionBlock: 	[closure] in [] in TextMorphForEditView(TextMorph)>>keyStroke...etc...
		oldEditor: 	a TextMorphEditor
		oldParagraph: 	a MultiNewParagraph
		oldText: 	a Text for 'saveConfig

	"write info about the current configuration t...etc...
	Receiver's instance variables: 
		bounds: 	0@0 corner: 682@194
		owner: 	a TransformMorph(4023)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 682@194
		color: 	Color black
		extension: 	a MorphExtension (1227) [other:  (blinkStart -> 25666)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for 'saveConfig

	"write info about the current configuration to a...etc...
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(1192)
		acceptOnCR: 	false


TextMorphForEditView>>handleInteraction:
	Receiver: a TextMorphForEditView(2640)
	Arguments and temporary variables: 
		interActionBlock: 	[closure] in [] in TextMorphForEditView(TextMorph)>>keyStroke...etc...
	Receiver's instance variables: 
		bounds: 	0@0 corner: 682@194
		owner: 	a TransformMorph(4023)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 682@194
		color: 	Color black
		extension: 	a MorphExtension (1227) [other:  (blinkStart -> 25666)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for 'saveConfig

	"write info about the current configuration to a...etc...
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(1192)
		acceptOnCR: 	false


[] in TextMorphForEditView(TextMorph)>>keyStroke:
	Receiver: a TextMorphForEditView(2640)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
		action: 	nil
	Receiver's instance variables: 
		bounds: 	0@0 corner: 682@194
		owner: 	a TransformMorph(4023)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 682@194
		color: 	Color black
		extension: 	a MorphExtension (1227) [other:  (blinkStart -> 25666)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for 'saveConfig

	"write info about the current configuration to a...etc...
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(1192)
		acceptOnCR: 	false


StandardToolSet class>>codeCompletionAround:textMorph:keyStroke:
	Receiver: StandardToolSet
	Arguments and temporary variables: 
		aBlock: 	[closure] in TextMorphForEditView(TextMorph)>>keyStroke:
		aTextMorph: 	a TextMorphForEditView(2640)
		evt: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	2
		instanceVariables: 	nil
		organization: 	('as yet unclassified')

		subclasses: 	nil
		name: 	#StandardToolSet
		classPool: 	nil
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'Tools-Base'
		traitComposition: 	nil
		localSelectors: 	nil


ToolSet class>>codeCompletionAround:textMorph:keyStroke:
	Receiver: ToolSet
	Arguments and temporary variables: 
		aBlock: 	[closure] in TextMorphForEditView(TextMorph)>>keyStroke:
		aTextMorph: 	a TextMorphForEditView(2640)
		evt: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		superclass: 	AppRegistry
		methodDict: 	a MethodDictionary()
		format: 	2
		instanceVariables: 	nil
		organization: 	('as yet unclassified')

		subclasses: 	nil
		name: 	#ToolSet
		classPool: 	nil
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'System-Applications'
		traitComposition: 	nil
		localSelectors: 	nil
		registeredClasses: 	an OrderedCollection(StandardToolSet)
		default: 	StandardToolSet


TextMorphForEditView(TextMorph)>>keyStroke:
	Receiver: a TextMorphForEditView(2640)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 682@194
		owner: 	a TransformMorph(4023)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 682@194
		color: 	Color black
		extension: 	a MorphExtension (1227) [other:  (blinkStart -> 25666)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for 'saveConfig

	"write info about the current configuration to a...etc...
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(1192)
		acceptOnCR: 	false


TextMorphForEditView>>keyStroke:
	Receiver: a TextMorphForEditView(2640)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
		view: 	a PluggableTextMorph(1192)
	Receiver's instance variables: 
		bounds: 	0@0 corner: 682@194
		owner: 	a TransformMorph(4023)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 682@194
		color: 	Color black
		extension: 	a MorphExtension (1227) [other:  (blinkStart -> 25666)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for 'saveConfig

	"write info about the current configuration to a...etc...
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(1192)
		acceptOnCR: 	false


TextMorphForEditView(TextMorph)>>handleKeystroke:
	Receiver: a TextMorphForEditView(2640)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		pasteUp: 	nil
	Receiver's instance variables: 
		bounds: 	0@0 corner: 682@194
		owner: 	a TransformMorph(4023)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 682@194
		color: 	Color black
		extension: 	a MorphExtension (1227) [other:  (blinkStart -> 25666)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for 'saveConfig

	"write info about the current configuration to a...etc...
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(1192)
		acceptOnCR: 	false


KeyboardEvent>>sentTo:
	Receiver: [keystroke '<Cmd-p>']
	Arguments and temporary variables: 
		anObject: 	a TextMorphForEditView(2640)
	Receiver's instance variables: 
		timeStamp: 	21772
		source: 	a HandMorph(3216)
		windowIndex: 	nil
		type: 	#keystroke
		buttons: 	64
		position: 	326@74
		handler: 	nil
		wasHandled: 	true
		keyValue: 	112
		charCode: 	112
		scanCode: 	35


TextMorphForEditView(Morph)>>handleEvent:
	Receiver: a TextMorphForEditView(2640)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 682@194
		owner: 	a TransformMorph(4023)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 682@194
		color: 	Color black
		extension: 	a MorphExtension (1227) [other:  (blinkStart -> 25666)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for 'saveConfig

	"write info about the current configuration to a...etc...
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(1192)
		acceptOnCR: 	false


TextMorphForEditView(Morph)>>handleFocusEvent:
	Receiver: a TextMorphForEditView(2640)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	0@0 corner: 682@194
		owner: 	a TransformMorph(4023)
		submorphs: 	#()
		fullBounds: 	0@0 corner: 682@194
		color: 	Color black
		extension: 	a MorphExtension (1227) [other:  (blinkStart -> 25666)]
		borderWidth: 	0
		borderColor: 	Color black
		textStyle: 	a TextStyle Bitmap DejaVu Sans 9
		text: 	a Text for 'saveConfig

	"write info about the current configuration to a...etc...
		wrapFlag: 	true
		paragraph: 	a MultiNewParagraph
		editor: 	a TextMorphEditor
		container: 	nil
		predecessor: 	nil
		successor: 	nil
		backgroundColor: 	nil
		margins: 	nil
		editHistory: 	a TextMorphCommandHistory
		editView: 	a PluggableTextMorph(1192)
		acceptOnCR: 	false


[] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		focusHolder: 	a TextMorphForEditView(2640)
		result: 	#(nil)
	Receiver's instance variables: 
		bounds: 	662@421 corner: 678@437
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	662@421 corner: 678@437
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1703)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[648@419 662@421 mouseMove 25203 nil]
		targetOffset: 	111@2
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 25203 656 420 0 0 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


[] in PasteUpMorph>>becomeActiveDuring:
	Receiver: a PasteUpMorph(1622) [world]
	Arguments and temporary variables: 
		aBlock: 	[closure] in HandMorph>>sendFocusEvent:to:clear:
	Receiver's instance variables: 
		bounds: 	0@0 corner: 1232@750
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(3095) a PreDebugWindow(3332) a SystemWindow(...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.97 g: 0.98 b: 1.0)
		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.03 g: 0.02 b: 0.0)
		model: 	a MorphicModel(1926)
		cursor: 	1
		padding: 	3
		backgroundMorph: 	nil
		isPartsBin: 	nil
		autoLineLayout: 	false
		indicateCursor: 	nil
		resizeToFit: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


BlockClosure>>on:do:
	Receiver: [closure] in PasteUpMorph>>becomeActiveDuring:
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[closure] in PasteUpMorph>>becomeActiveDuring:
		handlerActive: 	false
	Receiver's instance variables: 
		outerContext: 	PasteUpMorph>>becomeActiveDuring:
		startpc: 	67
		numArgs: 	0


PasteUpMorph>>becomeActiveDuring:
	Receiver: a PasteUpMorph(1622) [world]
	Arguments and temporary variables: 
		aBlock: 	[closure] in HandMorph>>sendFocusEvent:to:clear:
		priorWorld: 	a PasteUpMorph(1622) [world]
		priorHand: 	a HandMorph(3216)
		priorEvent: 	nil
	Receiver's instance variables: 
		bounds: 	0@0 corner: 1232@750
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(3095) a PreDebugWindow(3332) a SystemWindow(...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.97 g: 0.98 b: 1.0)
		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.03 g: 0.02 b: 0.0)
		model: 	a MorphicModel(1926)
		cursor: 	1
		padding: 	3
		backgroundMorph: 	nil
		isPartsBin: 	nil
		autoLineLayout: 	false
		indicateCursor: 	nil
		resizeToFit: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		focusHolder: 	a TextMorphForEditView(2640)
		aBlock: 	[closure] in HandMorph>>sendKeyboardEvent:
		w: 	a PasteUpMorph(1622) [world]
		result: 	#(nil)
	Receiver's instance variables: 
		bounds: 	662@421 corner: 678@437
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	662@421 corner: 678@437
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1703)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[648@419 662@421 mouseMove 25203 nil]
		targetOffset: 	111@2
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 25203 656 420 0 0 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		focusHolder: 	a TextMorphForEditView(2640)
		aBlock: 	[closure] in HandMorph>>sendKeyboardEvent:
		result: 	nil
	Receiver's instance variables: 
		bounds: 	662@421 corner: 678@437
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	662@421 corner: 678@437
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1703)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[648@419 662@421 mouseMove 25203 nil]
		targetOffset: 	111@2
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 25203 656 420 0 0 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>sendKeyboardEvent:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
	Receiver's instance variables: 
		bounds: 	662@421 corner: 678@437
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	662@421 corner: 678@437
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1703)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[648@419 662@421 mouseMove 25203 nil]
		targetOffset: 	111@2
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 25203 656 420 0 0 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>handleEvent:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[keystroke '<Cmd-p>']
		evt: 	[keystroke '<Cmd-p>']
		ofs: 	nil
	Receiver's instance variables: 
		bounds: 	662@421 corner: 678@437
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	662@421 corner: 678@437
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1703)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[648@419 662@421 mouseMove 25203 nil]
		targetOffset: 	111@2
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 25203 656 420 0 0 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


HandMorph>>processEvents
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		evt: 	[keystroke '<Cmd-p>']
		evtBuf: 	#(2 21772 112 0 8 112 0 1)
		type: 	2
		hadAny: 	true
	Receiver's instance variables: 
		bounds: 	662@421 corner: 678@437
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	662@421 corner: 678@437
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1703)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[648@419 662@421 mouseMove 25203 nil]
		targetOffset: 	111@2
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 25203 656 420 0 0 0 1)
		lastKeyScanCode: 	35
		combinedChar: 	nil


[] in WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		h: 	a HandMorph(3216)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1232@750
		canvas: 	a FormCanvas on: DisplayScreen(1232x750x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(3548))(a DropListMorph...etc...
		lastStepTime: 	25194
		lastStepMessage: 	nil
		lastCycleTime: 	25233
		commandHistory: 	a CommandHistory
		alarms: 	a Heap()
		lastAlarmTime: 	25194
		menuBuilder: 	a PragmaMenuBuilder


Array(SequenceableCollection)>>do:
	Receiver: an Array(a HandMorph(3216))
	Arguments and temporary variables: 
		aBlock: 	[closure] in WorldState>>doOneCycleNowFor:
		index: 	1
		indexLimiT: 	1
	Receiver's instance variables: 
an Array(a HandMorph(3216))

WorldState>>handsDo:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aBlock: 	[closure] in WorldState>>doOneCycleNowFor:
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1232@750
		canvas: 	a FormCanvas on: DisplayScreen(1232x750x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(3548))(a DropListMorph...etc...
		lastStepTime: 	25194
		lastStepMessage: 	nil
		lastCycleTime: 	25233
		commandHistory: 	a CommandHistory
		alarms: 	a Heap()
		lastAlarmTime: 	25194
		menuBuilder: 	a PragmaMenuBuilder


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a PasteUpMorph(1622) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1232@750
		canvas: 	a FormCanvas on: DisplayScreen(1232x750x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(3548))(a DropListMorph...etc...
		lastStepTime: 	25194
		lastStepMessage: 	nil
		lastCycleTime: 	25233
		commandHistory: 	a CommandHistory
		alarms: 	a Heap()
		lastAlarmTime: 	25194
		menuBuilder: 	a PragmaMenuBuilder



--- The full stack ---
StandardFileMenu class(Object)>>doesNotUnderstand: #newFileMenu:withPattern:
VMMakerTool>>DoItIn:
Compiler>>evaluate:in:to:notifying:ifFail:logged:
[] in TextMorphEditor(ParagraphEditor)>>evaluateSelection
BlockClosure>>on:do:
TextMorphEditor(ParagraphEditor)>>evaluateSelection
TextMorphEditor(ParagraphEditor)>>printIt
[] in TextMorphEditor(ParagraphEditor)>>printIt:
TextMorphEditor(ParagraphEditor)>>terminateAndInitializeAround:
TextMorphEditor(ParagraphEditor)>>printIt:
TextMorphEditor(ParagraphEditor)>>dispatchOnKeyEvent:with:
TextMorphEditor>>dispatchOnKeyEvent:with:
TextMorphEditor(ParagraphEditor)>>keystroke:
TextMorphEditor>>keystroke:
[] in [] in TextMorphForEditView(TextMorph)>>keyStroke:
TextMorphForEditView(TextMorph)>>handleInteraction:
TextMorphForEditView>>handleInteraction:
[] in TextMorphForEditView(TextMorph)>>keyStroke:
StandardToolSet class>>codeCompletionAround:textMorph:keyStroke:
ToolSet class>>codeCompletionAround:textMorph:keyStroke:
TextMorphForEditView(TextMorph)>>keyStroke:
TextMorphForEditView>>keyStroke:
TextMorphForEditView(TextMorph)>>handleKeystroke:
KeyboardEvent>>sentTo:
TextMorphForEditView(Morph)>>handleEvent:
TextMorphForEditView(Morph)>>handleFocusEvent:
[] in HandMorph>>sendFocusEvent:to:clear:
[] in PasteUpMorph>>becomeActiveDuring:
BlockClosure>>on:do:
PasteUpMorph>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendKeyboardEvent:
HandMorph>>handleEvent:
HandMorph>>processEvents
[] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WorldState>>doOneCycleFor:
PasteUpMorph>>doOneCycle
[] in Project class>>spawnNewProcess
[] in BlockClosure>>newProcess
------------------------------------------------------------

THERE_BE_DRAGONS_HERE
VMMakerException: MacOSPowerPCOS9VMMaker could not find directory the platform code tree
29 March 2011 5:12:19 pm

VM: Mac OS - intel - 1067 - Squeak4.1 of 17 April 2010 [latest update: #9957] 21.0
Image: PharoCore1.1ALPHA [Latest update: #11239]

SecurityManager state:
Restricted: false
FileAccess: true
SocketAccess: true
Working Dir /Users/arnaudj/Desktop/GIT/Handle/VM
Trusted Dir /foobar/tooBar/forSqueak/bogus/
Untrusted Dir /Users/arnaudj/Library/Preferences/Squeak/Internet/My Squeak/

MacOSPowerPCOS9VMMaker(VMMaker)>>couldNotFindDirectory:
	Receiver: a MacOSPowerPCOS9VMMaker
	Arguments and temporary variables: 
		dirName: 	'the platform code tree'
	Receiver's instance variables: 
		inline: 	true
		forBrowser: 	false
		allPlugins: 	a SortedCollection(#AioPlugin #AsynchFilePlugin #B3DAcceleratorPlug...etc...
		internalPlugins: 	a SortedCollection(#ADPCMCodecPlugin #BMPReadWriterPlugin #Bal...etc...
		externalPlugins: 	a SortedCollection()
		platformName: 	'Mac OS'
		sourceDirName: 	nil
		platformRootDirName: 	nil
		logger: 	a TranscriptStream '
'
		allFilesList: 	a Dictionary()
		interpreterClassName: 	#Interpreter
		is64BitVM: 	false


MacOSPowerPCOS9VMMaker(VMMaker)>>platformRootDirectory
	Receiver: a MacOSPowerPCOS9VMMaker
	Arguments and temporary variables: 

	Receiver's instance variables: 
		inline: 	true
		forBrowser: 	false
		allPlugins: 	a SortedCollection(#AioPlugin #AsynchFilePlugin #B3DAcceleratorPlug...etc...
		internalPlugins: 	a SortedCollection(#ADPCMCodecPlugin #BMPReadWriterPlugin #Bal...etc...
		externalPlugins: 	a SortedCollection()
		platformName: 	'Mac OS'
		sourceDirName: 	nil
		platformRootDirName: 	nil
		logger: 	a TranscriptStream '
'
		allFilesList: 	a Dictionary()
		interpreterClassName: 	#Interpreter
		is64BitVM: 	false


VMMakerTool>>platformsListMenu
	Receiver: a VMMakerTool
	Arguments and temporary variables: 
		choice: 	nil
		platnames: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(2737) a PluggableTextMorph(2719) a...etc...
		vmMaker: 	a MacOSPowerPCOS9VMMaker
		allPluginsList: 	a PluggableListMorph(2563)
		allPluginsSelection: 	0
		allPluginsSelectionsArray: 	#(false false false false false false false false fa...etc...
		internalPluginsList: 	a PluggableListMorph(3517)
		internalPluginsSelection: 	nil
		internalPluginsSelectionsArray: 	#()
		externalPluginsList: 	a PluggableListMorph(92)
		externalPluginsSelection: 	nil
		externalPluginsSelectionsArray: 	#()
		logger: 	a TranscriptStream '
'
		interpreterClassMorph: 	a PluggableTextMorph(2719)
		platformPathMorph: 	a PluggableTextMorph(1932)
		platformNameMorph: 	a PluggableTextMorph(2527)
		generatedPathMorph: 	a PluggableTextMorph(3101)


[] in SimpleButtonMorph>>doButtonAction
	Receiver: a SimpleButtonMorph(1745)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	938@210 corner: 1011@227
		owner: 	a Morph(1444)
		submorphs: 	an Array(a StringMorph(1365)'Find platform')
		fullBounds: 	934@210 corner: 1014@227
		color: 	(Color r: 0.4 g: 0.8 b: 0.6)
		extension: 	a MorphExtension (3259) [balloonText] 
		borderWidth: 	1
		borderColor: 	Color gray
		target: 	a VMMakerTool
		actionSelector: 	#platformsListMenu
		arguments: 	#()
		actWhen: 	#buttonUp
		oldColor: 	nil
		mouseDownTime: 	109493
		label: 	a StringMorph(1365)'Find platform'


BlockClosure>>ensure:
	Receiver: [closure] in SimpleButtonMorph>>doButtonAction
	Arguments and temporary variables: 
		aBlock: 	[closure] in CursorWithMask(Cursor)>>showWhile:
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	SimpleButtonMorph>>doButtonAction
		startpc: 	56
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: 16@16
	depth: 1
	fromArray: #(
		2r0
		2r10000000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[closure] in SimpleButtonMorph>>doButtonAction
		oldcursor: 	((CursorWithMask
	extent: 16@16
	depth: 1
	fromArray: #(
		2r0
		2r1...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	-1@-1
		maskForm: 	Form(16x16x1)


SimpleButtonMorph>>doButtonAction
	Receiver: a SimpleButtonMorph(1745)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	938@210 corner: 1011@227
		owner: 	a Morph(1444)
		submorphs: 	an Array(a StringMorph(1365)'Find platform')
		fullBounds: 	934@210 corner: 1014@227
		color: 	(Color r: 0.4 g: 0.8 b: 0.6)
		extension: 	a MorphExtension (3259) [balloonText] 
		borderWidth: 	1
		borderColor: 	Color gray
		target: 	a VMMakerTool
		actionSelector: 	#platformsListMenu
		arguments: 	#()
		actWhen: 	#buttonUp
		oldColor: 	nil
		mouseDownTime: 	109493
		label: 	a StringMorph(1365)'Find platform'


SimpleButtonMorph>>mouseUp:
	Receiver: a SimpleButtonMorph(1745)
	Arguments and temporary variables: 
		evt: 	[971@222 mouseUp 109612 nil]
	Receiver's instance variables: 
		bounds: 	938@210 corner: 1011@227
		owner: 	a Morph(1444)
		submorphs: 	an Array(a StringMorph(1365)'Find platform')
		fullBounds: 	934@210 corner: 1014@227
		color: 	(Color r: 0.4 g: 0.8 b: 0.6)
		extension: 	a MorphExtension (3259) [balloonText] 
		borderWidth: 	1
		borderColor: 	Color gray
		target: 	a VMMakerTool
		actionSelector: 	#platformsListMenu
		arguments: 	#()
		actWhen: 	#buttonUp
		oldColor: 	nil
		mouseDownTime: 	109493
		label: 	a StringMorph(1365)'Find platform'


SimpleButtonMorph(Morph)>>handleMouseUp:
	Receiver: a SimpleButtonMorph(1745)
	Arguments and temporary variables: 
		anEvent: 	[971@222 mouseUp 109612 nil]
	Receiver's instance variables: 
		bounds: 	938@210 corner: 1011@227
		owner: 	a Morph(1444)
		submorphs: 	an Array(a StringMorph(1365)'Find platform')
		fullBounds: 	934@210 corner: 1014@227
		color: 	(Color r: 0.4 g: 0.8 b: 0.6)
		extension: 	a MorphExtension (3259) [balloonText] 
		borderWidth: 	1
		borderColor: 	Color gray
		target: 	a VMMakerTool
		actionSelector: 	#platformsListMenu
		arguments: 	#()
		actWhen: 	#buttonUp
		oldColor: 	nil
		mouseDownTime: 	109493
		label: 	a StringMorph(1365)'Find platform'


MouseButtonEvent>>sentTo:
	Receiver: [971@222 mouseUp 109612 nil]
	Arguments and temporary variables: 
		anObject: 	a SimpleButtonMorph(1745)
	Receiver's instance variables: 
		timeStamp: 	109612
		source: 	a HandMorph(3216)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	971@222
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


SimpleButtonMorph(Morph)>>handleEvent:
	Receiver: a SimpleButtonMorph(1745)
	Arguments and temporary variables: 
		anEvent: 	[971@222 mouseUp 109612 nil]
	Receiver's instance variables: 
		bounds: 	938@210 corner: 1011@227
		owner: 	a Morph(1444)
		submorphs: 	an Array(a StringMorph(1365)'Find platform')
		fullBounds: 	934@210 corner: 1014@227
		color: 	(Color r: 0.4 g: 0.8 b: 0.6)
		extension: 	a MorphExtension (3259) [balloonText] 
		borderWidth: 	1
		borderColor: 	Color gray
		target: 	a VMMakerTool
		actionSelector: 	#platformsListMenu
		arguments: 	#()
		actWhen: 	#buttonUp
		oldColor: 	nil
		mouseDownTime: 	109493
		label: 	a StringMorph(1365)'Find platform'


SimpleButtonMorph(Morph)>>handleFocusEvent:
	Receiver: a SimpleButtonMorph(1745)
	Arguments and temporary variables: 
		anEvent: 	[971@222 mouseUp 109612 nil]
	Receiver's instance variables: 
		bounds: 	938@210 corner: 1011@227
		owner: 	a Morph(1444)
		submorphs: 	an Array(a StringMorph(1365)'Find platform')
		fullBounds: 	934@210 corner: 1014@227
		color: 	(Color r: 0.4 g: 0.8 b: 0.6)
		extension: 	a MorphExtension (3259) [balloonText] 
		borderWidth: 	1
		borderColor: 	Color gray
		target: 	a VMMakerTool
		actionSelector: 	#platformsListMenu
		arguments: 	#()
		actWhen: 	#buttonUp
		oldColor: 	nil
		mouseDownTime: 	109493
		label: 	a StringMorph(1365)'Find platform'


[] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[971@222 mouseUp 109612 nil]
		focusHolder: 	a SimpleButtonMorph(1745)
		result: 	#(nil)
	Receiver's instance variables: 
		bounds: 	971@222 corner: 987@238
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	971@222 corner: 987@238
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1395)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[971@222 mouseUp 109612 nil]
		targetOffset: 	33@12
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 109612 971 222 0 0 0 1)
		lastKeyScanCode: 	125
		combinedChar: 	nil


[] in PasteUpMorph>>becomeActiveDuring:
	Receiver: a PasteUpMorph(1622) [world]
	Arguments and temporary variables: 
		aBlock: 	[closure] in HandMorph>>sendFocusEvent:to:clear:
	Receiver's instance variables: 
		bounds: 	0@0 corner: 1632@718
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(3095) a PreDebugWindow(2514) a SystemWindow(...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.97 g: 0.98 b: 1.0)
		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.03 g: 0.02 b: 0.0)
		model: 	a MorphicModel(1926)
		cursor: 	1
		padding: 	3
		backgroundMorph: 	nil
		isPartsBin: 	nil
		autoLineLayout: 	false
		indicateCursor: 	nil
		resizeToFit: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


BlockClosure>>on:do:
	Receiver: [closure] in PasteUpMorph>>becomeActiveDuring:
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[closure] in PasteUpMorph>>becomeActiveDuring:
		handlerActive: 	false
	Receiver's instance variables: 
		outerContext: 	PasteUpMorph>>becomeActiveDuring:
		startpc: 	67
		numArgs: 	0


PasteUpMorph>>becomeActiveDuring:
	Receiver: a PasteUpMorph(1622) [world]
	Arguments and temporary variables: 
		aBlock: 	[closure] in HandMorph>>sendFocusEvent:to:clear:
		priorWorld: 	a PasteUpMorph(1622) [world]
		priorHand: 	a HandMorph(3216)
		priorEvent: 	[971@222 mouseOver red nil nil]
	Receiver's instance variables: 
		bounds: 	0@0 corner: 1632@718
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(3095) a PreDebugWindow(2514) a SystemWindow(...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.97 g: 0.98 b: 1.0)
		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.03 g: 0.02 b: 0.0)
		model: 	a MorphicModel(1926)
		cursor: 	1
		padding: 	3
		backgroundMorph: 	nil
		isPartsBin: 	nil
		autoLineLayout: 	false
		indicateCursor: 	nil
		resizeToFit: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[971@222 mouseUp 109612 nil]
		focusHolder: 	a SimpleButtonMorph(1745)
		aBlock: 	[closure] in HandMorph>>sendMouseEvent:
		w: 	a PasteUpMorph(1622) [world]
		result: 	#(nil)
	Receiver's instance variables: 
		bounds: 	971@222 corner: 987@238
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	971@222 corner: 987@238
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1395)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[971@222 mouseUp 109612 nil]
		targetOffset: 	33@12
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 109612 971 222 0 0 0 1)
		lastKeyScanCode: 	125
		combinedChar: 	nil


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[971@222 mouseUp 109612 nil]
		focusHolder: 	a SimpleButtonMorph(1745)
		aBlock: 	[closure] in HandMorph>>sendMouseEvent:
		result: 	nil
	Receiver's instance variables: 
		bounds: 	971@222 corner: 987@238
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	971@222 corner: 987@238
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1395)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[971@222 mouseUp 109612 nil]
		targetOffset: 	33@12
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 109612 971 222 0 0 0 1)
		lastKeyScanCode: 	125
		combinedChar: 	nil


HandMorph>>sendMouseEvent:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[971@222 mouseUp 109612 nil]
	Receiver's instance variables: 
		bounds: 	971@222 corner: 987@238
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	971@222 corner: 987@238
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1395)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[971@222 mouseUp 109612 nil]
		targetOffset: 	33@12
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 109612 971 222 0 0 0 1)
		lastKeyScanCode: 	125
		combinedChar: 	nil


HandMorph>>handleEvent:
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		anEvent: 	[971@222 mouseUp 109612 nil]
		evt: 	[971@222 mouseUp 109612 nil]
		ofs: 	nil
	Receiver's instance variables: 
		bounds: 	971@222 corner: 987@238
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	971@222 corner: 987@238
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1395)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[971@222 mouseUp 109612 nil]
		targetOffset: 	33@12
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 109612 971 222 0 0 0 1)
		lastKeyScanCode: 	125
		combinedChar: 	nil


HandMorph>>processEvents
	Receiver: a HandMorph(3216)
	Arguments and temporary variables: 
		evt: 	[971@222 mouseUp 109612 nil]
		evtBuf: 	#(1 109612 971 222 0 0 0 1)
		type: 	1
		hadAny: 	false
	Receiver's instance variables: 
		bounds: 	971@222 corner: 987@238
		owner: 	a PasteUpMorph(1622) [world]
		submorphs: 	#()
		fullBounds: 	971@222 corner: 987@238
		color: 	Color blue
		extension: 	a MorphExtension (539) [eventHandler = an EventHandler] 
		mouseFocus: 	nil
		keyboardFocus: 	a PluggableButtonMorph(1395)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[971@222 mouseUp 109612 nil]
		targetOffset: 	33@12
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		userInitials: 	''
		lastEventBuffer: 	#(1 109612 971 222 0 0 0 1)
		lastKeyScanCode: 	125
		combinedChar: 	nil


[] in WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		h: 	a HandMorph(3216)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1632@718
		canvas: 	a FormCanvas on: DisplayScreen(1632x718x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(3548))(a DropListMorph...etc...
		lastStepTime: 	109592
		lastStepMessage: 	nil
		lastCycleTime: 	109633
		commandHistory: 	a CommandHistory
		alarms: 	a Heap(MorphicAlarm(#spawnBalloonFor: -> a HandMorph(3216)))
		lastAlarmTime: 	109592
		menuBuilder: 	a PragmaMenuBuilder


Array(SequenceableCollection)>>do:
	Receiver: an Array(a HandMorph(3216))
	Arguments and temporary variables: 
		aBlock: 	[closure] in WorldState>>doOneCycleNowFor:
		index: 	1
		indexLimiT: 	1
	Receiver's instance variables: 
an Array(a HandMorph(3216))

WorldState>>handsDo:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aBlock: 	[closure] in WorldState>>doOneCycleNowFor:
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1632@718
		canvas: 	a FormCanvas on: DisplayScreen(1632x718x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(3548))(a DropListMorph...etc...
		lastStepTime: 	109592
		lastStepMessage: 	nil
		lastCycleTime: 	109633
		commandHistory: 	a CommandHistory
		alarms: 	a Heap(MorphicAlarm(#spawnBalloonFor: -> a HandMorph(3216)))
		lastAlarmTime: 	109592
		menuBuilder: 	a PragmaMenuBuilder


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a PasteUpMorph(1622) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1632@718
		canvas: 	a FormCanvas on: DisplayScreen(1632x718x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(3548))(a DropListMorph...etc...
		lastStepTime: 	109592
		lastStepMessage: 	nil
		lastCycleTime: 	109633
		commandHistory: 	a CommandHistory
		alarms: 	a Heap(MorphicAlarm(#spawnBalloonFor: -> a HandMorph(3216)))
		lastAlarmTime: 	109592
		menuBuilder: 	a PragmaMenuBuilder


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a PasteUpMorph(1622) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(3216))
		viewBox: 	0@0 corner: 1632@718
		canvas: 	a FormCanvas on: DisplayScreen(1632x718x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(3548))(a DropListMorph...etc...
		lastStepTime: 	109592
		lastStepMessage: 	nil
		lastCycleTime: 	109633
		commandHistory: 	a CommandHistory
		alarms: 	a Heap(MorphicAlarm(#spawnBalloonFor: -> a HandMorph(3216)))
		lastAlarmTime: 	109592
		menuBuilder: 	a PragmaMenuBuilder


PasteUpMorph>>doOneCycle
	Receiver: a PasteUpMorph(1622) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	0@0 corner: 1632@718
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(3095) a PreDebugWindow(2514) a SystemWindow(...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.97 g: 0.98 b: 1.0)
		extension: 	a MorphExtension (2543) [eventHandler = an EventHandler]  [other:  (...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.03 g: 0.02 b: 0.0)
		model: 	a MorphicModel(1926)
		cursor: 	1
		padding: 	3
		backgroundMorph: 	nil
		isPartsBin: 	nil
		autoLineLayout: 	false
		indicateCursor: 	nil
		resizeToFit: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil


[] in Project class>>spawnNewProcess
	Receiver: Project
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#beep->(Project>>#beep "a CompiledMethod(1287)")...etc...
		format: 	168
		instanceVariables: 	#('world' 'changeSet' 'transcript' 'parentProject' 'previous...etc...
		organization: 	('*Polymorph-Widgets' createTaskbarIfNecessary moveCollapsedWindo...etc...
		subclasses: 	nil
		name: 	#Project
		classPool: 	a Dictionary(#AllProjects->an OrderedCollection(a Project) #CurrentP...etc...
		sharedPools: 	nil
		environment: 	Smalltalk
		category: 	#'System-Support'
		traitComposition: 	{}
		localSelectors: 	nil


[] in BlockClosure>>newProcess
	Receiver: [closure] in Project class>>spawnNewProcess
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	Project class>>spawnNewProcess
		startpc: 	53
		numArgs: 	0



--- The full stack ---
MacOSPowerPCOS9VMMaker(VMMaker)>>couldNotFindDirectory:
MacOSPowerPCOS9VMMaker(VMMaker)>>platformRootDirectory
VMMakerTool>>platformsListMenu
[] in SimpleButtonMorph>>doButtonAction
BlockClosure>>ensure:
CursorWithMask(Cursor)>>showWhile:
SimpleButtonMorph>>doButtonAction
SimpleButtonMorph>>mouseUp:
SimpleButtonMorph(Morph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
SimpleButtonMorph(Morph)>>handleEvent:
SimpleButtonMorph(Morph)>>handleFocusEvent:
[] in HandMorph>>sendFocusEvent:to:clear:
[] in PasteUpMorph>>becomeActiveDuring:
BlockClosure>>on:do:
PasteUpMorph>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEvents
[] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
PasteUpMorph>>doOneCycle
[] in Project class>>spawnNewProcess
[] in BlockClosure>>newProcess
------------------------------------------------------------


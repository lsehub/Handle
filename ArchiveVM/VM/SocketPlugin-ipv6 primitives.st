'From PharoCore1.1ALPHA of ''19 October 2009'' [Latest update: #11239] on 8 March 2011 at 5:18:40 pm'!!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/8/2007 18:01'!primitiveResolverGetAddressInfoFamily	| family |	self primitive: 'primitiveResolverGetAddressInfoFamily'		parameters: #().	interpreterProxy failed		ifFalse:			[family := self sqResolverGetAddressInfoFamily.			 ^family asSmallIntegerObj]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/8/2007 17:23'!primitiveResolverGetAddressInfoHost: hostName service: servName flags: flags family: family type: type protocol: protocol	| hostSize servSize |	self primitive: 'primitiveResolverGetAddressInfo'		parameters: #(String String SmallInteger SmallInteger SmallInteger SmallInteger).	interpreterProxy failed		ifFalse:			[hostSize := interpreterProxy byteSizeOf: hostName cPtrAsOop.			 servSize := interpreterProxy byteSizeOf: servName cPtrAsOop.			 self			 	sqResolverGetAddressInfoHost: hostName Size: hostSize Service: servName Size: servSize					Flags: flags Family: family Type: type Protocol: protocol]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/8/2007 18:17'!primitiveResolverGetAddressInfoNext	| more |	self primitive: 'primitiveResolverGetAddressInfoNext'		parameters: #().	more := self sqResolverGetAddressInfoNext.	interpreterProxy failed ifTrue: [^nil].	^more asBooleanObj! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/8/2007 18:01'!primitiveResolverGetAddressInfoProtocol	| protocol |	self primitive: 'primitiveResolverGetAddressInfoProtocol'		parameters: #().	interpreterProxy failed		ifFalse:			[protocol := self sqResolverGetAddressInfoProtocol.			 ^protocol asSmallIntegerObj]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/8/2007 17:33'!primitiveResolverGetAddressInfoResult: socketAddress	| addrSize |	self primitive: 'primitiveResolverGetAddressInfoResult'		parameters: #(ByteArray).	interpreterProxy failed		ifFalse:			[addrSize := interpreterProxy byteSizeOf: socketAddress cPtrAsOop.			 self sqResolverGetAddressInfoResult: socketAddress Size: addrSize]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/8/2007 17:40'!primitiveResolverGetAddressInfoSize	| size |	self primitive: 'primitiveResolverGetAddressInfoSize'		parameters: #().	interpreterProxy failed		ifFalse:			[size := self sqResolverGetAddressInfoSize.			 ^size asSmallIntegerObj]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/8/2007 18:01'!primitiveResolverGetAddressInfoType	| type |	self primitive: 'primitiveResolverGetAddressInfoType'		parameters: #().	interpreterProxy failed		ifFalse:			[type := self sqResolverGetAddressInfoType.			 ^type asSmallIntegerObj]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/8/2007 18:59'!primitiveResolverGetNameInfo: socketAddress flags: flags	| addrSize addrBase |	self var: #addrBase type: 'char *'.	self primitive: 'primitiveResolverGetNameInfo'		parameters: #(Oop SmallInteger).	interpreterProxy failed		ifFalse:			[addrSize := interpreterProxy byteSizeOf: socketAddress.			 addrBase := self cCoerce: (interpreterProxy firstIndexableField: socketAddress) to: 'char *'.			 self sqResolverGetNameInfo: addrBase Size: addrSize Flags: flags]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/8/2007 18:49'!primitiveResolverGetNameInfoHostResult: socketName	| addrSize |	self primitive: 'primitiveResolverGetNameInfoHostResult'		parameters: #(String).	interpreterProxy failed		ifFalse:			[addrSize := interpreterProxy byteSizeOf: socketName cPtrAsOop.			 self sqResolverGetNameInfoHostResult: socketName Size: addrSize]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/8/2007 18:38'!primitiveResolverGetNameInfoHostSize	| size |	self primitive: 'primitiveResolverGetNameInfoHostSize'		parameters: #().	interpreterProxy failed		ifFalse:			[size := self sqResolverGetNameInfoHostSize.			 ^size asSmallIntegerObj]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/8/2007 18:50'!primitiveResolverGetNameInfoServiceResult: socketName	| addrSize |	self primitive: 'primitiveResolverGetNameInfoServiceResult'		parameters: #(String).	interpreterProxy failed		ifFalse:			[addrSize := interpreterProxy byteSizeOf: socketName cPtrAsOop.			 self sqResolverGetNameInfoServiceResult: socketName Size: addrSize]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/8/2007 18:38'!primitiveResolverGetNameInfoServiceSize	| size |	self primitive: 'primitiveResolverGetNameInfoServiceSize'		parameters: #().	interpreterProxy failed		ifFalse:			[size := self sqResolverGetNameInfoServiceSize.			 ^size asSmallIntegerObj]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/9/2007 09:03'!primitiveResolverHostNameResult: nameString	| nameSize |	self primitive: 'primitiveResolverHostNameResult'		parameters: #(String).	interpreterProxy failed		ifFalse:			[nameSize := interpreterProxy byteSizeOf: nameString cPtrAsOop.			 self sqResolverHostNameResult: nameString Size: nameSize]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/9/2007 09:00'!primitiveResolverHostNameSize	| size |	self primitive: 'primitiveResolverHostNameSize'		parameters: #().	interpreterProxy failed		ifFalse:			[size := self sqResolverHostNameSize.			 interpreterProxy failed ifFalse: [^size asSmallIntegerObj]]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/9/2007 09:36'!primitiveSocket: socket bindTo: socketAddress	| addrSize addrBase s  |	self var: #addrBase type: 'char *' .	self var: #s type: 'SocketPtr'.	self primitive: 'primitiveSocketBindTo' parameters: #(#Oop #Oop).	s := self socketValueOf: socket.	addrSize := interpreterProxy byteSizeOf: socketAddress.	addrBase := self cCoerce: (interpreterProxy firstIndexableField: socketAddress) to: 'char *'.	interpreterProxy failed ifFalse: [self sqSocket: s BindToAddress: addrBase Size: addrSize]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/8/2007 22:21'!primitiveSocket: socket connectTo: socketAddress	| addrSize addrBase s  |	self var: #addrBase type: 'char *' .	self var: #s type: 'SocketPtr'.	self primitive: 'primitiveSocketConnectTo' parameters: #(#Oop #Oop).	s := self socketValueOf: socket.	addrSize := interpreterProxy byteSizeOf: socketAddress.	addrBase := self cCoerce: (interpreterProxy firstIndexableField: socketAddress) to: 'char *'.	interpreterProxy failed ifFalse: [self sqSocket: s ConnectToAddress: addrBase Size: addrSize]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/9/2007 09:46'!primitiveSocket: socket listenWithBacklog: backlogSize	| s  |	self var: #s type: 'SocketPtr'.	self primitive: 'primitiveSocketListenWithBacklog' parameters: #(#Oop #SmallInteger).	s := self socketValueOf: socket.	interpreterProxy failed ifFalse: [self sqSocket: s ListenBacklog: backlogSize]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/9/2007 10:26'!primitiveSocket: socket localAddressResult: socketAddress	| addrSize addrBase s  |	self var: #addrBase type: 'char *' .	self var: #s type: 'SocketPtr'.	self primitive: 'primitiveSocketLocalAddressResult' parameters: #(#Oop #Oop).	s := self socketValueOf: socket.	addrSize := interpreterProxy byteSizeOf: socketAddress.	addrBase := self cCoerce: (interpreterProxy firstIndexableField: socketAddress) to: 'char *'.	interpreterProxy failed ifFalse: [self sqSocket: s LocalAddressResult: addrBase Size: addrSize]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/9/2007 10:26'!primitiveSocket: socket remoteAddressResult: socketAddress	| addrSize addrBase s  |	self var: #addrBase type: 'char *' .	self var: #s type: 'SocketPtr'.	self primitive: 'primitiveSocketRemoteAddressResult' parameters: #(#Oop #Oop).	s := self socketValueOf: socket.	addrSize := interpreterProxy byteSizeOf: socketAddress.	addrBase := self cCoerce: (interpreterProxy firstIndexableField: socketAddress) to: 'char *'.	interpreterProxy failed ifFalse: [self sqSocket: s RemoteAddressResult: addrBase Size: addrSize]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/9/2007 08:56'!primitiveSocketAddressGetPort	| addr addrSize addrBase port |	self var: #addrBase type: 'char *' .	addr := self primitive: 'primitiveSocketAddressGetPort' parameters: #() receiver: #Oop.	addrSize := interpreterProxy byteSizeOf: addr.	addrBase := self cCoerce: (interpreterProxy firstIndexableField: addr) to: 'char *'.	interpreterProxy failed		ifFalse:			[port := self sqSocketAddress: addrBase SizeGetPort: addrSize.			 interpreterProxy failed ifFalse: [^port asSmallIntegerObj]]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/9/2007 08:56'!primitiveSocketAddressSetPort: portNumber	| addr addrSize addrBase |	self var: #addrBase type: 'char *' .	addr := self primitive: 'primitiveSocketAddressSetPort' parameters: #(SmallInteger) receiver: #Oop.	addrSize := interpreterProxy byteSizeOf: addr.	addrBase := self cCoerce: (interpreterProxy firstIndexableField: addr) to: 'char *'.	interpreterProxy failed ifFalse: [self sqSocketAddress: addrBase Size: addrSize SetPort: portNumber]! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/9/2007 10:30'!primitiveSocketLocalAddressSize: socket	| s size |	self var: #s type: 'SocketPtr'.	self primitive: 'primitiveSocketLocalAddressSize' parameters: #(#Oop).	s := self socketValueOf: socket.	interpreterProxy failed ifTrue: [^nil].	size := self sqSocketLocalAddressSize: s.	interpreterProxy failed ifTrue: [^nil].	^size asSmallIntegerObj! !!SocketPlugin methodsFor: 'ipv6 primitives' stamp: 'ikp 6/9/2007 10:30'!primitiveSocketRemoteAddressSize: socket	| s size |	self var: #s type: 'SocketPtr'.	self primitive: 'primitiveSocketRemoteAddressSize' parameters: #(#Oop).	s := self socketValueOf: socket.	interpreterProxy failed ifTrue: [^nil].	size := self sqSocketRemoteAddressSize: s.	interpreterProxy failed ifTrue: [^nil].	^size asSmallIntegerObj! !
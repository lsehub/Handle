MetaHandle subclass: #MetaWatcher	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Handles-Watcher'!!MetaWatcher methodsFor: 'as yet unclassified' stamp: 'JB 12/2/2010 15:07'!isMeta	^ true! !!MetaWatcher methodsFor: 'as yet unclassified' stamp: 'JB 12/2/2010 15:07'!unWatch	self receiver become: self! !Handle subclass: #Watcher	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Handles-Watcher'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Watcher class	instanceVariableNames: ''!!Watcher class methodsFor: 'as yet unclassified' stamp: 'JB 12/2/2010 15:07'!InitializeWatcherFor: aObject 	^ aObject class! !!Watcher class methodsFor: 'as yet unclassified' stamp: 'JB 12/2/2010 15:07'!watch: aObject 	| watcher aClass meta |	watcher := self new.	aClass := self InitializeWatcherFor: aObject.	watcher become: aObject.	meta := MetaWatcher for: aObject.	aObject classLookup: aClass.	aObject addBehavior.	aObject receiver: watcher.	aObject becomeHandle.	^ meta! !Watcher subclass: #TranscriptWatcher	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Handles-Watcher'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!TranscriptWatcher class	instanceVariableNames: ''!!TranscriptWatcher class methodsFor: 'as yet unclassified' stamp: 'JB 12/2/2010 15:07'!InitializeWatcherFor: aObject 	| behavior treeRewriter |	treeRewriter := RBParseTreeRewriter new.	treeRewriter replaceMethod: self detectRule with: self replaceRule.	behavior := Behavior new setFormat: aObject class format;				 superclass: aObject class;				 methodDict: MethodDictionary new.	aObject class methodDict		do: [:method | 			| tree |			tree := treeRewriter						executeTree: (RBParser parseMethod: method getSource);						 tree.			behavior compile: tree formattedCode].	^ behavior! !!TranscriptWatcher class methodsFor: 'as yet unclassified' stamp: 'JB 12/2/2010 15:07'!detectRule	^ '`@methodName: `@methodArgs     | `@Temps |     `@Statements'! !!TranscriptWatcher class methodsFor: 'as yet unclassified' stamp: 'JB 12/2/2010 15:07'!replaceRule	^ '`@methodName: `@methodArgs     | `@Temps |	Transcript show: ''message send '',[self `@methodName: `@methodArgs ] asString.	Transcript cr.	^super `@methodName: `@methodArgs.'! !